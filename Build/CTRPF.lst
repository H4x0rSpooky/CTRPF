00000000 d _TLS_MODULE_BASE_
00000000 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000001 D CTRPluginFramework::PrivColor::_format
0000000c 00000008 B CTRPluginFramework::Renderer::_rendererContext
00000014 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000024 00000001 B CTRPluginFramework::PrivColor::_useClamp
00000025 00000001 b __tls_guard
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000124 t ClearMem
07000138 t ClrLoop
07000150 T _init
07000168 T initLib
07000188 T __ctru_exit
07000194 t .udivsi3_skip_div0_test
07000194 T __aeabi_uidiv
07000194 000001ec T __udivsi3
07000380 00000020 T __aeabi_uidivmod
070003a0 T __aeabi_idiv
070003a0 00000220 T __divsi3
070003a8 t .divsi3_skip_div0_test
070005c0 00000020 T __aeabi_idivmod
070005e0 00000004 W __aeabi_idiv0
070005e0 00000004 W __aeabi_ldiv0
070005e4 0000019c T __aeabi_frsub
070005ec 00000194 T __aeabi_fsub
070005ec 00000194 T __subsf3
070005f0 00000190 T __addsf3
070005f0 00000190 T __aeabi_fadd
07000780 00000028 T __aeabi_ui2f
07000780 00000028 T __floatunsisf
07000788 00000020 T __aeabi_i2f
07000788 00000020 T __floatsisf
070007a8 0000008c T __aeabi_ul2f
070007a8 0000008c T __floatundisf
070007b8 0000007c T __aeabi_l2f
070007b8 0000007c T __floatdisf
07000834 T __aeabi_ldivmod
07000908 00000014 T __restore_core_regs
07000908 00000014 T restore_core_regs
0700091c T __gnu_Unwind_Restore_VFP
07000924 T __gnu_Unwind_Save_VFP
0700092c T __gnu_Unwind_Restore_VFP_D
07000934 T __gnu_Unwind_Save_VFP_D
0700093c T __gnu_Unwind_Restore_VFP_D_16_to_31
07000944 T __gnu_Unwind_Save_VFP_D_16_to_31
0700094c T __gnu_Unwind_Restore_WMMXD
07000990 T __gnu_Unwind_Save_WMMXD
070009d4 T __gnu_Unwind_Restore_WMMXC
070009e8 T __gnu_Unwind_Save_WMMXC
070009fc 00000024 T ___Unwind_RaiseException
070009fc 00000024 T _Unwind_RaiseException
07000a20 00000024 T ___Unwind_Resume
07000a20 00000024 T _Unwind_Resume
07000a44 00000024 T ___Unwind_Resume_or_Rethrow
07000a44 00000024 T _Unwind_Resume_or_Rethrow
07000a68 00000024 T ___Unwind_ForcedUnwind
07000a68 00000024 T _Unwind_ForcedUnwind
07000a8c 00000024 T ___Unwind_Backtrace
07000a8c 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 00000018 t __tcf_0
070012d0 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07001354 0000003c T CTRPluginFramework::function(CTRPluginFramework::MenuEntry*)
07001390 00000134 T CTRPluginFramework::main()
070014c4 000000dc W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
070015a0 000001e0 t CTRPluginFramework::ToggleTouchscreenForceOn()
07001780 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07001784 00000004 T CTRPluginFramework::OnProcessExit()
07001788 T svcCustomBackdoor
07001790 T svcConvertVAToPA
07001798 T svcFlushDataCacheRange
070017a0 T svcInvalidateEntireInstructionCache
070017a8 T svcMapProcessMemoryEx
070017bc T svcUnmapProcessMemoryEx
070017c4 T svcControlProcess
070017cc 00000078 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
070017cc 00000078 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07001844 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
07001844 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
07001870 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
07001884 00000038 T CTRPluginFramework::PluginMenu::Run() const
070018bc 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
070018c4 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
070018d4 00000048 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070018d4 00000048 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700191c 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
0700191c 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07001944 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
07001954 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07001954 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070019a4 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
070019a4 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
070019d4 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
070019dc 00000110 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
07001aec 00000090 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07001b7c 0000001c T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
07001b7c 0000001c T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
07001b98 0000000c T CTRPluginFramework::Color::Color(unsigned long)
07001b98 0000000c T CTRPluginFramework::Color::Color(unsigned long)
07001ba4 00000008 T CTRPluginFramework::Color::ToU32() const
07001bac 00000114 T CTRPluginFramework::Color::Fade(float)
07001cc0 0000020c T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07001ecc 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
07001f0c 00000218 t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
07002124 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
0700212c 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070021d8 00000024 T OnLoadCro
070021fc 00000004 W CTRPluginFramework::OnPluginToSwap()
07002200 00000004 W CTRPluginFramework::OnPluginFromSwap()
07002204 00000304 T CTRPluginFramework::Initialize()
07002508 000000ac T CTRPluginFramework::ThreadExit()
070025b4 00000064 T abort
07002618 00000048 T CTRPluginFramework::ThreadInit(void*)
07002660 000000d4 W CTRPluginFramework::__WaitForDebug()
07002734 0000008c T __entrypoint
070027c0 00000614 T CTRPluginFramework::KeepThreadMain(void*)
07002dd4 00000040 t _GLOBAL__sub_I_g_gspEventThreadPriority
07002e14 00000020 t _GLOBAL__sub_D_g_gspEventThreadPriority
07002e34 T __aeabi_read_tp
07002e40 T LoadCROHooked
07002e54 T AR__ExecuteRoutine
07002e7c t stackBak
07002e84 0000003c t __ctru_get_reent
07002ec0 0000003c T __getThreadLocalStorage
07002efc 000000f4 T __system_initSyscalls
07002ff0 00000020 T __libctru_exit
07003010 00000020 T __appExit
07003030 00000144 T __createThread
07003174 00000138 T __startThread
070032ac 00000024 T threadGetHandle
070032d0 0000002c T threadFree
070032fc 00000024 T threadJoin
07003320 00000020 T threadGetCurrent
07003340 0000005c T threadExit
0700339c 00000040 t _thread_begin
070033dc 00000088 T plgLdrExit
07003464 000000ec T plgLdrInit
07003550 00000050 T PLGLDR__GetPluginPath
070035a0 00000024 T PLGLDR__FetchEvent
070035c8 000000d4 T PLGLDR__Reply
0700369c 000000a8 T __system_allocateHeaps
07003744 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
07003770 00000198 t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
07003908 000002b4 t CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&) [clone .part.0] [clone .isra.0]
07003bbc 000002e4 T CTRPluginFrameworkImpl::Services::GSP::Initialize()
07003ea0 000000dc T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
07003f7c 00000004 T __gsp__Update
07003f80 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
07003f98 00000028 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
07003fc0 000000e0 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
070040a0 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
070040e8 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
0700411c 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
07004148 00000148 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
07004290 00000030 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
070042c0 000000d0 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
07004390 00000040 t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
070043d0 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
070043f0 000000cc T CTRPluginFramework::SystemImpl::Initialize()
070044bc 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
070044d4 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
07004510 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
07004530 0000003c T CTRPluginFramework::SystemImpl::Status()
0700456c 00000004 W std::_Sp_counted_ptr<decltype(nullptr), (__gnu_cxx::_Lock_policy)0>::_M_dispose()
07004570 0000000c W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_destroy()
0700457c 00000278 t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*) [clone .part.0]
070047f4 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
070048a4 00000290 T CTRPluginFramework::Screenshot::TaskCallback(void*)
07004b34 000003d4 T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
07004f08 00000388 T CTRPluginFramework::Screenshot::UpdateFileCount()
07005290 00000048 T CTRPluginFramework::Screenshot::Initialize()
070052d8 00000064 t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0700533c 000000c8 t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07005404 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
0700541c 00000164 T CTRPluginFramework::ScreenImpl::Initialize()
07005580 00000054 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
070055d4 000000e4 T CTRPluginFramework::ScreenImpl::Fade(float)
070056b8 000000e0 t CTRPluginFramework::ScreenImpl::Acquire() [clone .part.0]
07005798 00000064 T CTRPluginFramework::ScreenImpl::ImportFromGsp()
070057fc 00000028 T CTRPluginFramework::ScreenImpl::Release()
07005824 0000007c T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
070058a0 00000098 T CTRPluginFramework::ScreenImpl::Clear(bool)
07005938 00000034 T CTRPluginFramework::ScreenImpl::Copy()
0700596c 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
07005974 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
070059d0 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
07005a28 0000003c T CTRPluginFramework::ScreenImpl::Clean()
07005a64 000000bc T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
07005b20 00000098 T CTRPluginFramework::ScreenImpl::AcquireFromGsp()
07005bb8 0000007c T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
07005c34 0000004c T CTRPluginFramework::ScreenImpl::SwapBuffer()
07005c80 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
07005c94 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
07005cb0 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
07005ccc 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
07005cd4 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
07005cdc 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
07005ce4 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
07005d00 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
07005d1c 00000068 T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
07005d84 00000030 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
07005db4 0000005c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
07005e10 00000064 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
07005e74 000000fc T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
07005f70 000000a8 T CTRPluginFramework::Scheduler::Initialize()
07006018 00000058 T CTRPluginFramework::Scheduler::Exit()
07006070 000003a8 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
07006418 0000018c T CTRPluginFramework::Scheduler__CoreHandler(void*)
070065a4 0000021c W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
070067c0 00000170 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
07006930 00000170 W CTRPluginFramework::Scheduler::~Scheduler()
07006930 00000170 W CTRPluginFramework::Scheduler::~Scheduler()
07006aa0 00000094 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
07006b34 00000014 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
07006b48 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
07006b94 00000098 T CTRPluginFramework::ProcessImpl::Play(bool)
07006c2c 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
07006c48 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
07006c64 00000078 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
07006cdc 00000080 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
07006d5c 000000bc T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
07006e18 000000d0 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
07006ee8 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
07006f20 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
07006f38 t _store_reg_loop
07006f58 00000118 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
07007070 000000f0 T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
07007160 000000f0 T CTRPluginFramework::ProcessImpl::Initialize()
07007250 00000068 T CTRPluginFramework::ProcessImpl::Pause(bool)
070072b8 000000c0 T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
07007378 0000002c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
070073a4 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
070073d8 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
070073e4 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
070073f4 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0700740c 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0700744c 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
07007490 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
070074a4 00000004 T Kernel::Initialize()
070074a8 00000028 T Kernel::Memcpy(void*, void const*, unsigned long)
070074d0 0000000c T KProcess::GetCurrent()
070074dc 00000024 T KProcess::PatchCore2Access()
07007500 00000034 T KProcess__PatchCategory
07007534 00000034 T KProcess__PatchMaxPriority
07007568 00000028 T KProcess::PatchMaxThreads()
07007590 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
070075b0 0000027c t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
0700782c 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070078dc 000000d4 T CTRPluginFramework::HookManager::HookManager()
070078dc 000000d4 T CTRPluginFramework::HookManager::HookManager()
070079b0 000000e8 T __hook__CheckTlsValue
07007a98 00000118 T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
07007bb0 00000068 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
07007c18 0000000c T CTRPluginFramework::HookManager::Lock()
07007c24 0000000c T CTRPluginFramework::HookManager::Unlock()
07007c30 00000070 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
07007ca0 00000080 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
07007d20 00000134 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
07007e54 00000094 T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
07007ee8 000001a8 T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
07008090 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
0700809c 00000030 t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
070080cc 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
070080f0 00000004 t addrMapNodeDestructor(rbtree_node*)
070080f4 0000014c T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
07008240 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
07008248 0000006c T CTRPluginFramework::Heap::Free(void*)
070082b4 0000000c T CTRPluginFramework::Heap::SpaceFree()
070082c0 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
070082cc 0000000c t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
070082d8 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
070082e0 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
070082e4 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
070082e8 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
0700830c 0000004c T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
07008358 00000130 W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
07008488 0000025c T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
070086e4 00000024 t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
07008708 0000004c t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
07008754 000000e4 t __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > std::__find_if<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__ops::_Iter_equals_val<void (* const)()> >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__ops::_Iter_equals_val<void (* const)()>, std::random_access_iterator_tag) [clone .isra.0]
07008838 00000104 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
07008838 00000104 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0700893c 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
07008944 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
07008964 000001b0 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07008b14 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07008b34 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
07008b50 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
07008b6c 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
07008b74 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
07008b7c 00000144 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07008cc0 000008fc T CTRPluginFramework::PluginMenuImpl::Run()
070095bc 00000110 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
070096cc 0000015c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07009828 00000144 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0700996c 00000110 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
07009a7c 00000144 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07009bc0 00000260 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
07009e20 000001fc T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0700a01c 000001d4 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0700a1f0 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0700a1fc 0000000c t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0700a208 00000378 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0700a208 00000378 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0700a580 000002b0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0700a580 000002b0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0700a830 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
0700a838 00000094 t __tcf_0
0700a8cc 00000110 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
0700a9dc 0000013c t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
0700ab18 00000694 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700ab18 00000694 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700b1ac 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
0700b1b8 000003a0 T CTRPluginFramework::PluginMenuHome::_RenderTop()
0700b558 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
0700b690 0000058c T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
0700bc1c 00000124 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
0700bd40 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
0700bdd0 000000e4 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0700beb4 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
0700bf38 000000b8 T CTRPluginFramework::PluginMenuHome::Init()
0700bff0 000000a0 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0700c090 00000060 T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
0700c0f0 0000012c T CTRPluginFramework::PluginMenuHome::UpdateNote()
0700c21c 00000064 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0700c280 00000174 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
0700c3f8 000003f8 T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
0700c7f0 000002c4 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
0700cab4 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
0700cab4 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
0700caf0 000001ac T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
0700cc9c 00000060 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
0700ccfc 000001ec T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0700cee8 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
0700cf44 00000154 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
0700d098 000001ac T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
0700d244 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
0700d25c 00000110 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
0700d36c 0000037c T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
0700d6e8 00000110 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
0700d7f8 00000098 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
0700d890 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
0700d8b4 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
0700d8c8 00000118 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
0700d9e0 00000094 t __tcf_0
0700da74 000001e8 t CTRPluginFramework::ProcessPathString(unsigned char*)
0700dc5c 00000070 t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700dccc 00000290 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0700dccc 00000290 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0700df5c 000000b4 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
0700e010 000002e0 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
0700e2f0 000002fc T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
0700e5ec 000001d8 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
0700e7c4 00000198 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
0700e95c 000003e4 T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
0700ed40 00000284 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700efc4 00000360 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
0700f324 0000018c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0700f4b0 00000238 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0700f6e8 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
0700f7b4 00000248 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
0700f9fc 00000238 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
0700fc34 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
0700fc44 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
0700fc54 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
0700fc64 00000058 W CTRPluginFramework::MenuItem::~MenuItem()
0700fc64 00000058 W CTRPluginFramework::MenuItem::~MenuItem()
0700fcbc 00000060 W CTRPluginFramework::MenuItem::~MenuItem()
0700fd1c 00000128 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0700fd1c 00000128 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0700fe44 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0700fe60 000000d0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700fe60 000000d0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ff30 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ff30 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07010004 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
07010018 000002a8 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
070102c0 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
070102d8 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
070102fc 000000bc T CTRPluginFramework::MenuFolderImpl::Clear()
070103b8 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
070103c8 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
070103e8 00000110 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
070104f8 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
07010558 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701056c 00000028 T CTRPluginFramework::MenuEntryImpl::Enable()
07010594 000002d4 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
07010868 00000078 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07010868 00000078 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
070108e0 00000080 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07010960 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07010960 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07010a4c 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07010a4c 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07010b3c 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
07010b44 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
07010b58 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
07010b64 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
07010b6c 00000028 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
07010b94 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
07010bb0 00000088 T CTRPluginFramework::MenuEntryImpl::_Execute()
07010c38 000000f4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07010c38 000000f4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07010d2c 0000014c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07010d2c 0000014c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07010e78 00000040 T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
07010eb8 00000060 T CTRPluginFramework::Menu::CloseAll()
07010f18 00000058 T CTRPluginFramework::Menu::~Menu()
07010f18 00000058 T CTRPluginFramework::Menu::~Menu()
07010f70 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
07010f7c 00000008 T CTRPluginFramework::Menu::GetFolder() const
07010f84 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
07010f8c 00000048 T CTRPluginFramework::Menu::GetSelectedItem()
07010fd4 000003f0 T CTRPluginFramework::Menu::Draw() const
070113c8 000000c0 T CTRPluginFramework::Menu::_ScrollUp(int)
07011488 00000358 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
070117e0 00000184 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
07011964 0000008c T CTRPluginFramework::Menu::ShowNote()
070119f0 00000008 T CTRPluginFramework::Menu::CloseNote()
070119f8 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
07011a00 0000003c W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
07011a3c 00000044 T CTRPluginFramework::Menu::Pop()
07011a80 000000b0 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
07011b30 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07011be0 000001ec T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011be0 000001ec T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011dcc 00000200 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011dcc 00000200 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011fcc 000000b8 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07011fcc 000000b8 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07012084 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701208c 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
07012094 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701209c 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
070120a4 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
070120ac 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
070120b4 00000068 T CTRPluginFramework::KeyboardImpl::Clear()
0701211c 0000018c T CTRPluginFramework::KeyboardImpl::_RenderTop()
070122a8 000004c0 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
07012768 000001d0 T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
07012938 00000088 T CTRPluginFramework::UnitsToNextChar(char const*, int)
070129c0 000000d8 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
07012a98 00000090 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
07012b28 00000098 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
07012bc0 00000190 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
07012d50 00000180 T CTRPluginFramework::KeyboardImpl::_Update(float)
07012ed0 000006fc T CTRPluginFramework::KeyboardImpl::_CheckKeys()
070135cc 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
07013634 00000088 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
070136bc 000000a8 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
07013764 00000600 T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
07013d64 0000008c T CTRPluginFramework::KeyboardImpl::operator()(int&)
07013df0 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
07013df8 00000064 W CTRPluginFramework::Rect<int>::Contains(int, int) const
07013e5c 00000114 W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
07013f70 00000110 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
07014080 00000364 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
070143e4 00000188 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<char, CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, char&&, CTRPluginFramework::Rect<int>&)
0701456c 0000007c W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
070145e8 00000190 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
07014778 00000088 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
07014800 000001e0 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
070149e0 000000c0 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
07014aa0 00000580 T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
07015020 00000584 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
070155a4 000001e0 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<char const (&) [3], CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, char const (&) [3], CTRPluginFramework::Rect<int>&)
07015784 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
07015840 000001e0 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<char const (&) [4], CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, char const (&) [4], CTRPluginFramework::Rect<int>&)
07015a20 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
07015adc 00000a2c T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
07016508 00000c40 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
07017148 00000188 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<char&, CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, char&, CTRPluginFramework::Rect<int>&)
070172d0 0000007c W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
0701734c 00000204 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
07017550 0000004c T CTRPluginFramework::KeyboardImpl::_Decimal()
0701759c 00000088 t CTRPluginFramework::KeyboardImpl::_Hexadecimal() [clone .part.0]
07017624 00000020 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07017644 000000a8 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
070176f0 000005f4 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
07017ce4 00000330 T CTRPluginFramework::KeyboardImpl::Run()
07018014 0000004c W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07018014 0000004c W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07018060 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
070180a4 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
070180d0 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070180d0 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070180d4 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070180d4 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070180d8 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
070180d8 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
070180dc 00000014 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070180f0 00000014 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07018104 00000014 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07018118 000001a8 T CTRPluginFramework::HexEditor::ByteView::Draw()
070182c0 000000f8 T CTRPluginFramework::HexEditor::IntegerView::Draw()
070183b8 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
070184f4 000003dc T CTRPluginFramework::HexEditor::ByteView::UpdateView()
070188d0 0000025c T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
07018b2c 00000304 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
07018e30 00000168 t CTRPluginFramework::HexEditor::_CreateCheat() [clone .part.0]
07018f98 000002b4 T CTRPluginFramework::HexEditor::_RenderTop(void*)
0701924c 00000138 T CTRPluginFramework::HexEditor::~HexEditor()
0701924c 00000138 T CTRPluginFramework::HexEditor::~HexEditor()
07019384 00000078 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
070193fc 00000040 T CTRPluginFramework::HexEditor::_MoveForward()
07019440 000004c4 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07019440 000004c4 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07019904 000000b4 T CTRPluginFramework::HexEditor::SetView(unsigned long)
070199b8 00000130 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
07019ae8 00000010 T CTRPluginFramework::HexEditor::Refresh()
07019af8 00000248 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
07019d40 0000008c T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
07019dcc 0000009c T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
07019e68 000001b8 t CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short) [clone .part.0]
0701a020 00000050 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
0701a070 00000050 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
0701a0c0 00000050 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
0701a110 000000fc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
0701a20c 000000e0 T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
0701a2ec 000000d0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
0701a3bc 000002b0 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
0701a66c 00000234 T CTRPluginFramework::HexEditor::_Update()
0701a8a0 000001a4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701aa44 00000074 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0701aab8 000002ec T CTRPluginFramework::HexEditor::_BrowseHistory()
0701ada4 00000428 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701b1cc 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0701b27c 00000694 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701b910 00000260 T CTRPluginFramework::GuideReader::GuideReader()
0701b910 00000260 T CTRPluginFramework::GuideReader::GuideReader()
0701bb70 00000190 T CTRPluginFramework::GuideReader::_LoadBMP()
0701bd00 00000768 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.0]
0701c468 0000015c t CTRPluginFramework::GuideReader::Draw() [clone .part.0]
0701c5c4 000000a8 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701c66c 000000e8 T CTRPluginFramework::Converter::Converter()
0701c66c 000000e8 T CTRPluginFramework::Converter::Converter()
0701c754 00000010 T CTRPluginFramework::Converter::Instance()
0701c764 00000114 T CTRPluginFramework::Converter::_Draw()
0701c878 000002b0 T CTRPluginFramework::Converter::operator()(unsigned long)
0701cb28 00000288 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0701cdb0 0000023c T CTRPluginFramework::Icon::DrawAbout(int, int)
0701cfec 00000248 T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
0701d234 00000248 T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0701d47c 00000248 T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0701d6c4 00000248 T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0701d90c 00000248 T CTRPluginFramework::Icon::DrawClose(int, int, bool)
0701db54 0000023c T CTRPluginFramework::Icon::DrawController(int, int)
0701dd90 00000248 T CTRPluginFramework::Icon::DrawCut(int, int, bool)
0701dfd8 00000248 T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0701e220 00000248 T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
0701e468 00000248 T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0701e6b0 0000023c T CTRPluginFramework::Icon::DrawFolder(int, int)
0701e8ec 00000248 T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0701eb34 0000023c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0701ed70 0000023c T CTRPluginFramework::Icon::DrawFile(int, int)
0701efac 0000023c T CTRPluginFramework::Icon::DrawGameController(int, int)
0701f1e8 00000248 T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
0701f430 0000023c T CTRPluginFramework::Icon::DrawGrid(int, int)
0701f66c 00000248 T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
0701f8b4 0000023c T CTRPluginFramework::Icon::DrawGuide(int, int)
0701faf0 00000224 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
0701fd14 00000248 T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0701ff5c 0000023c T CTRPluginFramework::Icon::DrawMore(int, int)
07020198 00000248 T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
070203e0 0000023c T CTRPluginFramework::Icon::DrawRAM(int, int)
0702061c 0000023c T CTRPluginFramework::Icon::DrawRestart(int, int)
07020858 0000023c T CTRPluginFramework::Icon::DrawRocket(int, int)
07020a94 0000023c T CTRPluginFramework::Icon::DrawSave(int, int)
07020cd0 0000023c T CTRPluginFramework::Icon::DrawSearch(int, int)
07020f0c 0000023c T CTRPluginFramework::Icon::DrawSettings(int, int)
07021148 0000023c T CTRPluginFramework::Icon::DrawShutdown(int, int)
07021384 0000023c T CTRPluginFramework::Icon::DrawTools(int, int)
070215c0 00000248 T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
07021808 0000023c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
07021a44 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
07021a60 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
07021a98 00000028 T CTRPluginFramework::Window::~Window()
07021a98 00000028 T CTRPluginFramework::Window::~Window()
07021ac0 00000064 T CTRPluginFramework::Window::Draw() const
07021b24 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07021bfc 00000018 T CTRPluginFramework::Window::DrawButton() const
07021c14 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
07021c2c 00000018 T CTRPluginFramework::Window::MustClose() const
07021c44 00000028 T CTRPluginFramework::Window::Close() const
07021c6c 00000004 T CTRPluginFramework::Window::GetRect() const
07021c70 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
07021ca4 000000e0 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
07021d84 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
07021da4 00000008 W CTRPluginFramework::Drawable::operator()()
07021dac 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07021dac 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07021dc0 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07021dc0 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07021de0 0000002c T CTRPluginFramework::UIContainer::Draw()
07021e0c 0000003c T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07021e48 00000110 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
07021f58 0000003c T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07021f94 0000010c T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07021f94 0000010c T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
070220a0 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
070220a8 00000038 T CTRPluginFramework::TouchKeyString::CanUse()
070220e0 00000108 T CTRPluginFramework::TouchKeyString::Draw()
070221e8 00000128 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07022310 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07022328 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
0702233c 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
07022354 00000078 T CTRPluginFramework::TouchKeyString::operator()()
070223cc 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
070223d4 000000f0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
070224c4 00000054 T CTRPluginFramework::TouchKey::~TouchKey()
070224c4 00000054 T CTRPluginFramework::TouchKey::~TouchKey()
07022518 0000005c T CTRPluginFramework::TouchKey::~TouchKey()
07022574 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07022574 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07022600 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07022600 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
070226b8 00000090 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
070226b8 00000090 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07022748 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
07022750 00000068 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
070227b8 00000074 T CTRPluginFramework::TouchKey::Draw()
0702282c 000000b8 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070228e4 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
070228ec 00000110 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
070229fc 000001f8 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
070229fc 000001f8 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07022bf4 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07022bf8 000002fc T CTRPluginFramework::TextBox::Draw()
07022ef4 00000040 W CTRPluginFramework::TextBox::~TextBox()
07022ef4 00000040 W CTRPluginFramework::TextBox::~TextBox()
07022f34 00000048 W CTRPluginFramework::TextBox::~TextBox()
07022f7c 00000098 T CTRPluginFramework::TextBox::TextBox()
07022f7c 00000098 T CTRPluginFramework::TextBox::TextBox()
07023014 0000000c T CTRPluginFramework::TextBox::Open() const
07023020 0000000c T CTRPluginFramework::TextBox::Close() const
0702302c 00000008 T CTRPluginFramework::TextBox::IsOpen() const
07023038 00000250 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
07023288 0000000c T CTRPluginFramework::TextBox::DrawConst() const
07023294 000000a0 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
07023334 000000d8 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0702340c 00000110 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char* const&>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char* const&)
0702351c 00000110 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char*&&)
0702362c 00000280 T CTRPluginFramework::TextBox::_GetTextInfos()
070238ac 000001dc T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
070238ac 000001dc T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07023a88 000000f0 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07023b78 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
07023ca8 00000104 T CTRPluginFramework::Renderer::GetTextSize(char const*)
07023dac 00000174 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
07023f20 00000194 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
070240b4 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
07024118 00000208 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
07024320 00000244 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
07024564 000002a0 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
07024804 00000068 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0702486c 00000064 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
070248d0 00000014 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
070248e4 00000088 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0702496c 000001a4 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
07024b10 000001bc T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07024ccc 000000bc T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
07024d88 00000220 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
07024fa8 00000044 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
07024fec 000001d0 t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
070251bc 00000018 t __tcf_0
070251d4 000001d8 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
070253ac 000001b0 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0702555c 00000098 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
070255f4 000000b4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
070256a8 00000340 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070259e8 000001c0 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
07025ba8 0000010c W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07025cb4 0000003c W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
07025cf0 000007f8 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
070264e8 00000218 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07026700 00000050 T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
07026750 00000378 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
07026ac8 000000c4 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
07026b8c 0000017c T CTRPluginFramework::Renderer::EndFrame(bool)
07026d08 00000024 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
07026d2c 0000001c T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
07026d48 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
07026d74 00000030 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
07026da4 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
07026dcc 0000002c T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
07026df8 00000024 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
07026e1c 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
07026e4c 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
07026e94 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
07026ed8 00000170 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
07027048 00000148 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07027190 00000150 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
070272e0 00000164 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
07027444 0000016c T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
070275b0 00000124 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
070276d4 00000030 T CTRPluginFramework::PrivColor::UseClamp(bool)
07027704 00000078 T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
0702777c 00000044 t __tls_init
0702777c 00000044 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
070277c0 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask)
07027814 0000000c T CTRPluginFramework::OSDImpl::Lock()
07027820 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0702783c 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07027848 000000f8 T CTRPluginFramework::OSDImpl::PauseFrame()
07027940 000001e4 T CTRPluginFramework::OSDImpl::WaitFramePaused()
07027b24 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07027bd0 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
07027c00 000000a0 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
07027ca0 000000a4 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
07027d44 000000bc t CTRPluginFramework::OSDImpl::OnBottomScreenFrame() [clone .part.0]
07027e00 000000cc t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
07027ecc 000000e4 t __gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > std::__find_if<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, __gnu_cxx::__ops::_Iter_equals_val<bool (* const)(CTRPluginFramework::Screen const&)> >(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, __gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, __gnu_cxx::__ops::_Iter_equals_val<bool (* const)(CTRPluginFramework::Screen const&)>, std::random_access_iterator_tag) [clone .isra.0]
07027fb0 00000080 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_release()
07028030 00000088 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07028030 00000088 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070280b8 00000104 T CTRPluginFramework::OSDImpl::UpdateScreens()
070281bc 0000014c T CTRPluginFramework::InstallOSD()
07028308 00000058 T CTRPluginFramework::OSDImpl::_Initialize()
07028360 00000110 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07028470 0000036c T CTRPluginFramework::OSDImpl::Update()
070287dc 00000794 T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int)
07028f70 00000098 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
07029008 000000a4 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
070290ac 000000cc t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07029178 00000030 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07029178 00000030 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070291a8 00000038 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070291e0 00000080 T CTRPluginFramework::NumericTextBox::Draw()
07029260 00000144 T CTRPluginFramework::NumericTextBox::_UpdateVal()
070293a4 0000006c T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070293a4 0000006c T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07029410 000000fc T CTRPluginFramework::NumericTextBox::operator()()
0702950c 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
0702951c 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
0702952c 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
07029534 0000000c T CTRPluginFramework::NumericTextBox::Clear()
07029540 00000088 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070295c8 00000010 T CTRPluginFramework::Glyph::Width() const
070295d8 0000050c T CTRPluginFramework::GetOriginalGlyph(unsigned long)
07029ae8 00000428 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
07029f10 000000ac T CTRPluginFramework::Font::Initialize()
07029fbc 00000260 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
0702a21c 00000144 T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0702a360 00000090 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0702a3f0 00000028 T CTRPluginFramework::Font::GetGlyph(char)
0702a418 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0702a45c 00000074 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
0702a4d0 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
0702a4d0 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
0702a4d4 00000014 T CTRPluginFramework::FloatingButton::Draw()
0702a4e8 00000014 T CTRPluginFramework::FloatingButton::operator()()
0702a4fc 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
0702a510 0000016c T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
0702a67c 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702a67c 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702a6bc 00000094 T CTRPluginFramework::ComboBox::Draw()
0702a750 0000006c W CTRPluginFramework::ComboBox::~ComboBox()
0702a7bc 000000ac T CTRPluginFramework::ComboBox::operator()()
0702a868 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
0702a918 00000064 W CTRPluginFramework::ComboBox::~ComboBox()
0702a918 00000064 W CTRPluginFramework::ComboBox::~ComboBox()
0702a97c 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0702a97c 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0702a9cc 00000050 T CTRPluginFramework::ComboBox::Clear()
0702aa1c 00000238 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702ac54 00000060 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702acb4 00000098 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0702ad4c 00000030 T CTRPluginFramework::Button::~Button()
0702ad4c 00000030 T CTRPluginFramework::Button::~Button()
0702ad7c 00000038 T CTRPluginFramework::Button::~Button()
0702adb4 00000160 T CTRPluginFramework::Button::Draw()
0702af14 00000070 T CTRPluginFramework::Button::operator()()
0702af84 00000194 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
0702b118 000001cc T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702b118 000001cc T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702b2e4 00000024 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702b2e4 00000024 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702b308 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702b308 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702b39c 00000018 T CTRPluginFramework::Button::Enable(bool)
0702b3b4 00000010 T CTRPluginFramework::Button::Enable()
0702b3c4 00000010 T CTRPluginFramework::Button::Disable()
0702b3d4 00000010 T CTRPluginFramework::Button::Lock()
0702b3e4 00000010 T CTRPluginFramework::Button::Execute()
0702b3f4 00000018 T CTRPluginFramework::Button::SetState(bool)
0702b40c 00000010 T CTRPluginFramework::Button::GetState() const
0702b41c 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
0702b424 00000104 t CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&) [clone .part.0]
0702b528 000000ac T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0702b528 000000ac T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0702b5d4 00000044 T CTRPluginFramework::BMPImage::~BMPImage()
0702b5d4 00000044 T CTRPluginFramework::BMPImage::~BMPImage()
0702b618 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
0702b620 00000008 T CTRPluginFramework::BMPImage::Width() const
0702b628 00000008 T CTRPluginFramework::BMPImage::Height() const
0702b630 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
0702b638 00000010 T CTRPluginFramework::BMPImage::data() const
0702b648 00000034 T CTRPluginFramework::BMPImage::Unload()
0702b67c 0000025c T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0702b8d8 0000022c T CTRPluginFramework::BMPImage::OptimiseForRendering()
0702bb04 000000cc T CTRPluginFramework::BMPImage::Draw(int, int)
0702bbd0 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
0702bbd8 00000104 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0702bcdc 000000a8 T CTRPluginFramework::BMPImage::_CreateBitmap()
0702bd84 00000064 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0702bd84 00000064 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0702bde8 00000140 T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
0702bf28 000006e0 T CTRPluginFramework::BMPImage::_LoadBitmap()
0702c608 00000160 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702c608 00000160 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702c768 000008e0 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
0702d048 0000014c T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
0702d194 000000b4 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
0702d248 000000d4 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
0702d31c 00000950 T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0702dc6c 00000420 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
0702e08c 00000184 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
0702e210 000001bc T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
0702e3cc 000001bc T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
0702e588 000001a4 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
0702e72c 000000ec T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
0702e818 00000220 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
0702ea38 000002d8 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0702ed10 000000c0 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
0702edd0 000000b8 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
0702ee88 00000160 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
0702efe8 00000148 T ARM_Disasm::Decode01(unsigned long)
0702f130 00000078 T ARM_Disasm::Decode11(unsigned long)
0702f1a8 00000054 T ARM_Disasm::DecodeMUL(unsigned long)
0702f1fc 00000118 T ARM_Disasm::DecodeALU(unsigned long)
0702f314 00000114 T ARM_Disasm::Decode00(unsigned long)
0702f428 00000054 T ARM_Disasm::Decode(unsigned long)
0702f47c 00000110 W void std::vector<RegBlock, std::allocator<RegBlock> >::_M_realloc_insert<int&, int&>(__gnu_cxx::__normal_iterator<RegBlock*, std::vector<RegBlock, std::allocator<RegBlock> > >, int&, int&)
0702f58c 00000558 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
0702fae4 000003f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
0702fed4 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702fed4 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702ff4c 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702ff68 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0702ffb8 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07030068 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030068 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070300b4 000002a0 T CTRPluginFramework::MenuEntryActionReplay::Update()
07030354 0000018c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
070304e0 00000144 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
07030624 000026c0 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07032ce4 000000a0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
07032d84 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
07032da4 00000150 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032ef4 00000420 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
07033314 00000018 t __tcf_0
0703332c 00000160 t std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::__find_if<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}> >(__gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>, __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>, __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>, std::random_access_iterator_tag) [clone .constprop.0]
0703348c 000000f0 t __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}> >(__gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>, __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>, __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>, std::random_access_iterator_tag) [clone .constprop.0]
0703357c 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0703362c 0000001c T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
07033648 000000d4 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703371c 00000754 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07033e70 0000012c W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reallocate_map(unsigned int, bool)
07033f9c 000000e0 W void std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::emplace_back<CTRPluginFramework::MenuFolderImpl*>(CTRPluginFramework::MenuFolderImpl*&&)
0703407c 00001028 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
070350a4 000000c4 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07035168 00000180 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
070352e8 00000118 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
07035400 00000060 t __tcf_0
07035460 00000084 t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
070354e4 00002ab0 t CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)
07037f94 00000140 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07037f94 00000140 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
070380d4 00001894 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
07039968 0000037c T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07039968 0000037c T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07039ce4 00000304 T CTRPluginFramework::ARCodeEditor::_RenderTop()
07039fe8 00000090 T CTRPluginFramework::ARCodeEditor::_Update()
0703a078 00000118 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0703a190 00000290 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0703a420 00000080 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0703a4a0 000003a0 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0703a840 0000075c T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0703af9c 00000d5c T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
0703bcf8 0000063c t CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&) [clone .part.0]
0703c334 000001b4 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
0703c4e8 000000a0 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0703c588 000001d8 t CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .part.0]
0703c760 0000023c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0703c760 0000023c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0703c99c 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
0703c9d8 0000002c T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703ca04 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0703ca04 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0703ca28 00000030 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0703ca58 00000150 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0703ca58 00000150 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0703cba8 00000038 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0703cba8 00000038 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0703cbe0 000000e8 T CTRPluginFramework::ARCodeContext::Update()
0703ccc8 000000c0 T CTRPluginFramework::ARCodeContext::Clear()
0703cd88 000000b8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0703ce40 00000018 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
0703ce58 000000c4 t CTRPluginFramework::Preferences::LoadBackgrounds() [clone .part.0]
0703cf1c 0000011c T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0703d038 00000500 t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0703d538 000002c4 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
0703d7fc 000000b0 T CTRPluginFramework::Preferences::LoadSettings()
0703d8ac 00000150 T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0703d9fc 0000014c T CTRPluginFramework::Preferences::LoadSavedFavorites()
0703db48 0000007c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0703dbc4 000001c0 T CTRPluginFramework::Preferences::WriteSettings()
0703dd84 00000064 T CTRPluginFramework::Preferences::ApplyBacklight()
0703dde8 00000018 T CTRPluginFramework::Preferences::Initialize()
0703de00 000000f0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0703def0 00000050 t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0703df40 00000070 t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703dfb0 000000d8 T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0703e088 000004ac t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0703e534 00000f58 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0703f48c 0000008c T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0703f518 00000094 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0703f5ac 00000044 T CTRPluginFramework::InitializeRandomEngine()
0703f5f0 000000e0 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703f6d0 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703f6d8 0000004c T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703f724 0000018c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703f8b0 000000c0 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
0703f970 00000058 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0703f9c8 000000bc T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0703fa84 0000004c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0703fad0 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
0703fb80 0000001c T CTRPluginFramework::ResetColor[abi:cxx11]()
0703fb9c 00000068 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0703fc04 0000003c T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703fc40 00000018 t __tcf_0
0703fc58 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0703fc58 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0703fc80 00000058 T CTRPluginFramework::LineWriter::~LineWriter()
0703fc80 00000058 T CTRPluginFramework::LineWriter::~LineWriter()
0703fcd8 00000078 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
0703fd50 00000048 T CTRPluginFramework::LineWriter::Flush()
0703fd98 0000006c T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703fe04 00000060 T CTRPluginFramework::LineWriter::Close()
0703fe64 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
0703fe64 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
0703fe90 00000018 T CTRPluginFramework::LineReader::~LineReader()
0703fe90 00000018 T CTRPluginFramework::LineReader::~LineReader()
0703fea8 00000170 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07040018 00000014 T CTRPluginFramework::Touch::IsDown()
0704002c 0000002c T CTRPluginFramework::Touch::GetPosition()
07040058 00000020 T CTRPluginFramework::Time::AsSeconds() const
07040078 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
070400a0 00000170 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
07040210 0000003c T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07040210 0000003c T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
0704024c 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
0704024c 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
0704026c 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
070402c0 0000004c T CTRPluginFramework::ThreadEx::Join(bool)
0704030c 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
07040314 00000120 W std::pair<std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> >, bool> std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_unique<std::pair<unsigned long, ThreadVars*> >(std::pair<unsigned long, ThreadVars*>&&)
07040434 000001ec T __ctrpf_getThreadVars
07040620 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
07040658 00000024 t _GLOBAL__sub_D___ctrpf_getThreadVars
0704067c 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
07040680 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
07040684 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
070406b4 00000014 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
070406c8 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
070406cc 000000e4 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
070406cc 000000e4 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
070407b0 00000048 T CTRPluginFramework::Task::Start() const
070407f8 0000004c T CTRPluginFramework::Task::Start(void*) const
07040844 00000064 T CTRPluginFramework::Task::Wait() const
070408a8 00000010 T CTRPluginFramework::System::IsNew3DS()
070408b8 00000010 T CTRPluginFramework::System::Reboot()
070408c8 0000007c T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
07040944 00000010 T CTRPluginFramework::Process::GetHandle()
07040954 00000010 T CTRPluginFramework::Process::GetTitleID()
07040964 000000b4 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07040a18 000000a0 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07040ab8 00000024 T CTRPluginFramework::Process::GetTextSize()
07040adc 00000008 T CTRPluginFramework::Process::Pause()
07040ae4 00000010 T CTRPluginFramework::Process::Play(unsigned long)
07040af4 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
07040b9c 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
07040ba0 00000050 T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
07040bf0 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
07040c10 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
07040c30 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
07040c50 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
07040c74 00000014 T CTRPluginFramework::Mutex::Mutex()
07040c74 00000014 T CTRPluginFramework::Mutex::Mutex()
07040c88 00000030 T CTRPluginFramework::Mutex::~Mutex()
07040c88 00000030 T CTRPluginFramework::Mutex::~Mutex()
07040cb8 00000004 T CTRPluginFramework::Mutex::Lock()
07040cbc 00000004 T CTRPluginFramework::Mutex::Unlock()
07040cc0 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
07040cc0 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
07040ce4 0000005c T CTRPluginFramework::Lock::~Lock()
07040ce4 0000005c T CTRPluginFramework::Lock::~Lock()
07040d40 0000000c T CTRPluginFramework::HookContext::GetCurrent()
07040d4c 00000030 T CTRPluginFramework::HookContext::GetCallCode()
07040d7c 00000044 T CTRPluginFramework::Hook::Hook()
07040d7c 00000044 T CTRPluginFramework::Hook::Hook()
07040dc0 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07040dc0 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07040de8 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07040de8 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07040dfc 00000064 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
07040e60 00000054 T CTRPluginFramework::Hook::~Hook()
07040e60 00000054 T CTRPluginFramework::Hook::~Hook()
07040eb4 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
07040ed0 0000002c T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
07040efc 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
07040f0c 00000148 T CTRPluginFramework::Hook::Enable()
07041054 0000002c T CTRPluginFramework::Hook::Disable()
07041080 00000008 T CTRPluginFramework::Hook::GetContext() const
07041088 0000000c T CTRPluginFramework::FwkSettings::Get()
07041094 000000f8 T CTRPluginFramework::FwkSettings::SetThemeDefault()
0704118c 00000160 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070412ec 00000254 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07041540 00000150 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07041690 0000016c T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070417fc 00000088 T CTRPluginFramework::File::Close() const
07041884 00000214 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07041a98 000000cc T CTRPluginFramework::File::Read(void*, unsigned long) const
07041b64 000000fc T CTRPluginFramework::File::Write(void const*, unsigned long)
07041c60 00000050 T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07041cb0 000000e8 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07041d98 00000008 T CTRPluginFramework::File::Tell() const
07041da0 00000034 T CTRPluginFramework::File::Rewind() const
07041dd4 00000038 T CTRPluginFramework::File::Flush() const
07041e0c 00000074 T CTRPluginFramework::File::GetSize() const
07041e80 00000008 T CTRPluginFramework::File::IsOpen() const
07041e88 000000b8 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
07041f40 00000048 T CTRPluginFramework::File::File()
07041f40 00000048 T CTRPluginFramework::File::File()
07041f88 00000068 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07041f88 00000068 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07041ff0 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070420a0 00000258 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
070422f8 000002d4 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
070425cc 000005a8 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07042b74 000001b0 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07042d24 00000160 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07042e84 0000016c T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07042ff0 00000254 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07043244 00000160 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070433a4 000002b4 T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07043658 00000058 T CTRPluginFramework::Directory::Close() const
070436b0 000000b8 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07043768 00000008 T CTRPluginFramework::Directory::IsOpen() const
07043770 0000003c T CTRPluginFramework::Directory::Directory()
07043770 0000003c T CTRPluginFramework::Directory::Directory()
070437ac 0000005c T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070437ac 0000005c T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07043808 000000e8 T CTRPluginFramework::Directory::~Directory()
07043808 000000e8 T CTRPluginFramework::Directory::~Directory()
070438f0 000002a8 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
07043b98 000001b8 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07043d50 00000a40 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07044790 0000021c T CTRPluginFramework::Directory::_List() const
070449ac 00000208 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07044bb4 00000210 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07044dc4 00000020 T CTRPluginFramework::Controller::GetKeysDown()
07044de4 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
07044e00 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
07044e1c 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
07044e38 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
07044e54 0000003c T CTRPluginFramework::Controller::Update()
07044e90 00000020 T CTRPluginFramework::Clock::Clock()
07044e90 00000020 T CTRPluginFramework::Clock::Clock()
07044eb0 00000030 T CTRPluginFramework::Clock::GetElapsedTime() const
07044ee0 00000038 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
07044f18 00000038 T CTRPluginFramework::Clock::Restart()
07044f50 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07044f54 0000000c T CTRPluginFramework::Sound::Sound()
07044f54 0000000c T CTRPluginFramework::Sound::Sound()
07044f60 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07044f60 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07044f74 0000003c T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07044f74 0000003c T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07044fb0 000000c0 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
07045070 00000080 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
070450f0 0000005c T CTRPluginFramework::Sound::~Sound()
070450f0 0000005c T CTRPluginFramework::Sound::~Sound()
0704514c 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
07045164 00000018 T CTRPluginFramework::Sound::Play()
0704517c 0000004c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0704517c 0000004c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070451c8 00000044 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070451c8 00000044 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0704520c 0000007c T CTRPluginFramework::MessageBox::~MessageBox()
0704520c 0000007c T CTRPluginFramework::MessageBox::~MessageBox()
07045288 00000008 T CTRPluginFramework::MessageBox::operator()() const
07045290 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0704533c 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07045344 000000a8 T CTRPluginFramework::Hotkey::AskForKeys()
070453ec 000000a4 T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07045490 00000200 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07045690 00000018 T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07045690 00000018 T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
070456a8 00000050 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070456a8 00000050 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070456f8 00000040 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07045738 00000180 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
070458b8 0000002c T CTRPluginFramework::HotkeyManager::Count()
070458e4 0000027c T CTRPluginFramework::HotkeyManager::AskForKeys()
07045b60 00000224 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07045d84 0000004c t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
07045dd0 000000f8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07045ec8 000000ac T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07045f74 000000ac T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07046020 000000a0 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070460c0 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070460c0 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07046108 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07046108 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07046174 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07046174 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
070461a0 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
070461a8 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
070461c4 00000028 T CTRPluginFramework::Keyboard::Open() const
070461ec 000000cc T CTRPluginFramework::Keyboard::Open(unsigned char&) const
070462b8 000001bc T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07046474 000000cc T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07046540 000001bc T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
070466fc 000000cc T CTRPluginFramework::Keyboard::Open(unsigned long&) const
070467c8 000001bc T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
07046984 00000070 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
070469f4 00000084 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07046a78 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
07046a80 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
07046a88 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
07046a90 00000034 W __gnu_cxx::__stoa<float, float, char>(float (*)(char const*, char**), char const*, char const*, unsigned int*)::_Save_errno::~_Save_errno()
07046a90 00000034 W __gnu_cxx::__stoa<float, float, char>(float (*)(char const*, char**), char const*, char const*, unsigned int*)::_Save_errno::~_Save_errno()
07046ac4 000000e0 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07046ba4 00000098 T CTRPluginFramework::Keyboard::Open(float&) const
07046c3c 00000180 T CTRPluginFramework::Keyboard::Open(float&, float) const
07046dbc 00000014 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
07046dbc 00000014 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
07046dd0 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
07046dd0 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
07046dec 000000f4 t cwav_stopImpl.part.0
07046ee0 00000004 T cwavUseEnvironment
07046ee4 000000f0 T cwavNotifyAptEvent
07046fd4 00000034 T cwavSetVAToPACallback
07047008 000003cc T cwavLoad
070473d4 0000039c T cwavPlay
07047770 00000064 T cwavStop
070477d4 00000168 T cwavFree
0704793c 0000003c T fontEnsureMappedExtension
07047978 00000084 T MemPool::CoalesceRight(MemBlock*)
070479fc 00000170 T MemPool::Allocate(MemChunk&, unsigned long, int)
07047b6c 000000fc T MemPool::Deallocate(MemChunk const&)
07047c68 00000030 T MemPool::GetFreeSpace()
07047c98 00000284 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07047f1c 00000230 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
0704814c 000000cc T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0704814c 000000cc T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07048218 0000002c t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
07048244 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
07048278 00000094 T CTRPluginFramework::EventManager::EventManager()
07048278 00000094 T CTRPluginFramework::EventManager::EventManager()
0704830c 000001d8 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
070484e4 00000480 T CTRPluginFramework::EventManager::ProcessEvents()
07048968 0000013c T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
07048aa4 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
07048aac 000000f0 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07048aac 000000f0 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07048b9c 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
07048ba4 00000008 T CTRPluginFramework::SoundImpl::Play(int, int)
07048bac 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
07048bac 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
07048bd4 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07048e64 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704910c 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704939c 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
070493d0 00000348 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07049718 00000148 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07049718 00000148 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07049860 00000054 T CTRPluginFramework::SubMenu::~SubMenu()
07049860 00000054 T CTRPluginFramework::SubMenu::~SubMenu()
070498b4 0000001c T CTRPluginFramework::SubMenu::operator()()
070498d0 00000234 T CTRPluginFramework::SubMenu::Draw()
07049b04 000000ec T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
07049bf0 00000008 T CTRPluginFramework::SubMenu::IsOpen()
07049bf8 00000368 T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07049f60 00000024 T CTRPluginFramework::SubMenu::OptionsCount()
07049f84 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
07049f98 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
07049fac 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
07049fc0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
07049fd8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
07049ff0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
0704a008 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0704a020 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
0704a038 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0704a050 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
0704a068 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0704a080 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0704a098 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0704a09c 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0704a0a0 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
0704a0c8 00000094 t __tcf_0
0704a15c 00000060 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
0704a1bc 00000210 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0704a3cc 000000e0 t CTRPluginFramework::MenuHotkeyModifier()
0704a4ac 00000230 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
0704a6dc 000000c4 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0704a7a0 00000250 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704a9f0 00000070 t CTRPluginFramework::Reboot()
0704aa60 00000074 t CTRPluginFramework::Shutdown()
0704aad4 00000294 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0704ad68 00001878 t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
0704c5e0 0000015c T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0704c73c 0000141c T CTRPluginFramework::PluginMenuTools::InitMenu()
0704db58 00000308 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0704db58 00000308 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0704de60 0000010c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0704df6c 00000258 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0704e1c4 00000440 t CTRPluginFramework::UpdateScreenshotText()
0704e604 00000160 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0704e764 000001ac T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0704e910 00000b74 t CTRPluginFramework::ScreenshotMenuCallback()
0704f484 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0704f4a4 0000003c t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0704f4e0 00000044 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0704f524 00000184 t CTRPluginFramework::ClearSearchFolder()
0704f6a8 00000080 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0704f728 0000011c T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
0704f844 00000098 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
0704f8dc 00000348 T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0704fc24 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0704fc24 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07050264 000003a8 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0705060c 000000d4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
070506e0 00000728 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
07050e08 00000120 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
07050f28 00000350 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07051278 000000ec T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07051364 00000070 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
070513d4 000003c0 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
07051794 00000450 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07051be4 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
07051c04 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07051c04 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07051c24 00000028 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07051c4c 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
07051ca4 00000080 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07051ca4 00000080 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07051d24 00000068 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07051d24 00000068 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07051d8c 00000068 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07051d8c 00000068 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07051df4 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
07051df8 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
07051ea8 00000060 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07051ea8 00000060 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07051f08 000000a8 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
07051fb0 0000012c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
070520dc 00000074 T CTRPluginFramework::HotkeysModifier::_Update()
07052150 000003f8 T CTRPluginFramework::HotkeysModifier::operator()()
07052548 000002cc W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button&&)
07052814 000002f8 T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07052814 000002f8 T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07052b0c 00000048 T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07052b0c 00000048 T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07052b54 0000047c T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
07052fd0 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
07053080 000001a8 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
07053228 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
07053250 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070532d4 0000012c W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07053400 00000470 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
07053870 000005a0 T CTRPluginFramework::GatewayRAMDumper::operator()()
07053e10 00000118 t CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.0] [clone .isra.0]
07053f28 000002bc T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07053f28 000002bc T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070541e4 00000210 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070541e4 00000210 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070543f4 000002dc T CTRPluginFramework::MessageBoxImpl::_Draw()
070546d0 00000208 T CTRPluginFramework::MessageBoxImpl::operator()()
070548d8 00000004 T cwav_defaultVAToPA
070548dc 00000010 T cwavEnvUseEnvironment
070548ec 00000010 T cwavEnvGetEnvironment
070548fc 0000002c T cwavEnvInitialize
07054928 00000034 T cwavEnvFinalize
0705495c 00000058 T cwavEnvCompatibleEncoding
070549b4 0000002c T cwavEnvGetChannelAmount
070549e0 00000030 T cwavEnvIsChannelAvailable
07054a10 00000120 T cwavEnvSetADPCMState
07054b30 0000036c T cwavEnvPlay
07054e9c 00000068 T cwavEnvChannelIsPlaying
07054f04 00000064 T cwavEnvStop
07054f68 00000044 T CTRPluginFramework::Search::UpdateProgress()
07054fac 0000004c T CTRPluginFramework::Search::Cancel()
07054ff8 000001ec T CTRPluginFramework::Search::CheckNextRegion()
070551e4 00000008 T CTRPluginFramework::Search::GetHeader() const
070551ec 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
07055234 000002d4 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
07055508 0000000c T CTRPluginFramework::Search::GetType() const
07055514 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0705552c 0000007c T CTRPluginFramework::Search::WriteHeader()
070555a8 00000508 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
070555a8 00000508 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07055ab0 00000120 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
07055bd0 000000a0 T CTRPluginFramework::Search::CreateIndexTable()
07055c70 00000200 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07055c70 00000200 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07055e70 00000234 T CTRPluginFramework::Search::ExecuteSearch()
070560a4 000000c8 T CTRPluginFramework::Search32::FirstSearchUnknown()
0705616c 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
0705622c 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070562dc 00000080 T CTRPluginFramework::Search32::~Search32()
070562dc 00000080 T CTRPluginFramework::Search32::~Search32()
0705635c 0000001c T CTRPluginFramework::Search32::~Search32()
07056378 00000278 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07056378 00000278 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
070565f0 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070565f0 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07056610 0000012c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0705673c 00000174 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
070568b0 00000144 W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
070569f4 000001c4 T CTRPluginFramework::Search32::SecondSearchSpecified()
07056bb8 00000124 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
07056cdc 000001ac T CTRPluginFramework::Search32::SecondSearchUnknown()
07056e88 00000188 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07057010 000001f0 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
07057200 000001f0 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
070573f0 00000098 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07057488 0000051c T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
070579a4 000001c8 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
070579a4 000001c8 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07057b6c 00001140 T CTRPluginFramework::SearchMenu::Draw()
07058cac 000005b0 T CTRPluginFramework::SearchMenu::Update()
0705925c 0000014c T CTRPluginFramework::SearchMenu::_OpenExportFile()
070593a8 000000cc T CTRPluginFramework::SearchMenu::_NewCheat()
07059474 000001c4 T CTRPluginFramework::SearchMenu::_Edit()
07059638 00000464 T CTRPluginFramework::SearchMenu::_Export()
07059a9c 0000031c T CTRPluginFramework::SearchMenu::_ExportAll()
07059db8 000001bc T CTRPluginFramework::SearchMenu::_ShowGame()
07059f78 000005f8 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0705a570 00000954 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705aec4 00000958 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705b81c 00000914 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705c130 00000cc8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705cdf8 000004a8 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705d2a0 000004ac T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705d74c 000004a8 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705dbf4 00000670 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705e264 00000d8c T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705eff0 000007ac T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705f79c 00000468 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705fc04 00000724 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07060328 00000930 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07060c58 00000958 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070615b0 00000960 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07061f10 00000e70 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07062d80 0000000c T __sync_init
07062d8c 00000018 T __sync_fini
07062da4 0000002c T syncArbitrateAddressWithTimeout
07062dd0 0000001c T LightLock_Init
07062dec 00000094 T LightLock_Lock
07062e80 00000044 T LightLock_TryLock
07062ec4 00000040 T LightLock_Unlock
07062f04 00000024 T RecursiveLock_Init
07062f28 00000030 T RecursiveLock_Lock
07062f58 00000078 T RecursiveLock_TryLock
07062fd0 00000054 T RecursiveLock_Unlock
07063024 00000040 T LightEvent_Init
07063064 000000a4 T LightEvent_Clear
07063108 00000048 T LightEvent_Pulse
07063150 000000c8 T LightEvent_Signal
07063218 000000b0 T LightEvent_Wait
070632c8 00000014 T LightSemaphore_Init
070632dc 00000094 T LightSemaphore_Acquire
07063370 00000064 T LightSemaphore_Release
070633d4 00000084 W envGetHandle
07063458 00000050 W envDestroyHandles
070634a8 00000074 T osConvertVirtToPhys
0706351c 00000054 T osGetTimeRef
07063570 000000e4 T osGetTime
07063654 00000074 T __libctru_gtod
070636c8 0000009c T fontEnsureMapped
07063764 000000fc T fontGlyphIndexFromCodePoint
07063860 0000006c T fontGetCharWidthInfo
070638cc 00000124 T srvInit
070639f0 00000058 T srvExit
07063a48 00000080 T srvGetServiceHandleDirect
07063ac8 00000048 T srvGetServiceHandle
07063b10 00000038 T srvPublishToSubscriber
07063b48 00000094 t mappableFindAddressWithin
07063bdc 00000028 T mappableInit
07063c04 00000080 T mappableAlloc
07063c84 00000004 T mappableFree
07063c88 00000018 T ndspChnIsPlaying
07063ca0 00000018 T ndspChnSetFormat
07063cb8 00000064 T ndspChnSetRate
07063d1c 00000088 T ndspChnSetMix
07063da4 00000070 T ndspChnSetAdpcmCoefs
07063e14 000000a8 T ndspChnWaveBufClear
07063ebc 000000b8 T ndspChnWaveBufAdd
07063f74 000000a4 T cfguInit
07064018 0000003c T cfguExit
07064054 00000054 T CFGU_GetSystemLanguage
070640a8 000000f0 T gspExit
07064198 0000008c T acInit
07064224 0000003c T acExit
07064260 000000a4 T amInit
07064304 0000003c T amExit
07064340 000001d0 T csndInit
07064510 000000a0 T csndExit
070645b0 000000dc T csndAddCmd
0706468c 000000b4 T csndExecCmds
07064740 00000020 T CSND_SetPlayState
07064760 00000030 T CSND_SetBlock
07064790 0000003c T CSND_SetAdpcmState
070647cc 00000040 T CSND_SetChnRegs
0706480c 0000008c T csndGetState
07064898 0000002c T csndIsPlaying
070648c4 0000015c T aptSendCommand
07064a20 00000028 T APT_PrepareToCloseApplication
07064a48 00000048 T APT_CloseApplication
07064a90 0000007c T APT_CheckNew3DS
07064b0c 00000048 T APT_GetSharedFont
07064b54 00000024 W hidShouldUseIrrst
07064b78 0000018c T hidInit
07064d04 000000e8 T hidExit
07064dec 00000294 T hidScanInput
07065080 00000010 T hidKeysHeld
07065090 00000010 T hidKeysDown
070650a0 00000010 T hidKeysUp
070650b0 00000018 T hidTouchRead
070650c8 0000000c T srvPmGetSessionHandle
070650d4 000000c8 T fsInit
0706519c 0000003c T fsExit
070651d8 000000cc T FSUSER_OpenFile
070652a4 000000bc T FSUSER_DeleteFile
07065360 000000f8 T FSUSER_RenameFile
07065458 000000bc T FSUSER_DeleteDirectoryRecursively
07065514 000000d4 T FSUSER_CreateFile
070655e8 000000c4 T FSUSER_CreateDirectory
070656ac 000000f8 T FSUSER_RenameDirectory
070657a4 000000b4 T FSUSER_OpenDirectory
07065858 00000094 T FSUSER_OpenArchive
070658ec 00000058 T FSFILE_Read
07065944 00000060 T FSFILE_Write
070659a4 00000038 T FSFILE_GetSize
070659dc 00000028 T FSFILE_SetSize
07065a04 0000003c T FSFILE_Close
07065a40 00000024 T FSFILE_Flush
07065a64 00000028 T FSFILE_SetPriority
07065a8c 00000050 T FSDIR_Read
07065adc 0000003c T FSDIR_Close
07065b18 00000010 T rbtree_init
07065b28 000001a0 t do_insert
07065cc8 00000008 T rbtree_insert
07065cd0 00000090 T rbtree_rotate
07065d60 00000338 T rbtree_remove
07066098 00000074 T rbtree_find
0706610c 00000060 T encode_utf16
0706616c 000000fc T encode_utf8
07066268 000000e8 T utf16_to_utf8
07066350 00000064 T decode_utf16
070663b4 0000013c T decode_utf8
070664f0 000000c0 T utf8_to_utf16
070665b0 T svcQueryMemory
070665e0 T svcExitProcess
070665e8 T svcCreateThread
07066608 T svcExitThread
07066610 T svcSleepThread
07066618 T svcSetThreadPriority
07066620 T svcReleaseMutex
07066628 T svcCreateEvent
0706663c T svcSignalEvent
07066644 T svcClearEvent
0706664c T svcMapMemoryBlock
07066654 T svcUnmapMemoryBlock
0706665c T svcCreateAddressArbiter
07066670 T svcArbitrateAddress
07066688 T svcArbitrateAddressNoTimeout
07066690 T svcCloseHandle
07066698 T svcWaitSynchronization
070666a0 T svcWaitSynchronizationN
070666c8 T svcDuplicateHandle
070666dc T svcGetSystemTick
070666e4 T svcGetSystemInfo
070666fc T svcGetProcessInfo
07066714 T svcConnectToPort
07066728 T svcSendSyncRequest
07066730 T svcOpenProcess
07066744 T svcBreak
0706674c T svcInvalidateProcessDataCache
07066754 T svcFlushProcessDataCache
0706675c T svcKernelSetState
07066764 T svcQueryProcessMemory
07066788 00000160 T irrstInit
070668e8 000000cc T irrstExit
070669b4 000000b0 T irrstScanInput
07066a64 00000024 T irrstKeysHeld
07066a88 00000050 T rbtree_node_next
07066ad8 00000004 T operator delete(void*)
07066adc 00000004 T operator delete(void*, std::nothrow_t const&)
07066ae0 00000004 T operator delete[](void*)
07066ae4 00000060 T __cxa_guard_acquire
07066b44 0000000c T __cxa_guard_release
07066b50 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07066b50 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07066b70 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
07066b9c 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
07066b9c 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
07066bac 00000014 T std::get_new_handler()
07066bc0 0000005c T operator new(unsigned int)
07066c1c 0000001c T operator new(unsigned int, std::nothrow_t const&)
07066c38 00000004 T operator new[](unsigned int)
07066c3c 00000008 T __cxa_pure_virtual
07066c44 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07066c44 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07066c64 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07066c90 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07066cfc 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07066dd8 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07066e1c 00000004 T std::type_info::~type_info()
07066e1c 00000004 T std::type_info::~type_info()
07066e20 00000008 T std::type_info::__is_pointer_p() const
07066e20 00000008 T std::type_info::__is_function_p() const
07066e28 0000004c T std::type_info::operator==(std::type_info const&) const
07066e74 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07066e8c 00000014 T std::__detail::_List_node_base::_M_unhook()
07066ea0 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
07066f10 000002a4 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
070671b4 0000002c T std::__throw_bad_alloc()
070671e0 00000048 T std::__throw_logic_error(char const*)
07067228 00000048 T std::__throw_invalid_argument(char const*)
07067270 00000048 T std::__throw_length_error(char const*)
070672b8 00000048 T std::__throw_out_of_range(char const*)
07067300 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
0706737c 000000d0 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
07067450 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
07067530 0000000c T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
0706753c 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
070675ac 00000080 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
0706762c 00000138 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
07067764 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
070677bc 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
070677d0 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
07067854 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
07067878 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
0706789c 000000bc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07067958 00000108 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
07067a60 00000080 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
07067ae0 00000100 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07067be0 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
07067d04 00000290 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07067f94 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
07068024 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
070680c8 0000007c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
07068144 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
07068198 0000000c T std::bad_alloc::what() const
070681a4 00000020 T std::bad_alloc::~bad_alloc()
070681a4 00000020 T std::bad_alloc::~bad_alloc()
070681c4 0000002c T std::bad_alloc::~bad_alloc()
070681f0 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0706824c 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07068260 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07068260 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07068280 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
070682ac 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07068314 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07068340 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
07068384 00000004 T operator delete(void*, unsigned int)
07068388 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
07068458 0000009c t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
070684f4 00000044 T __cxa_allocate_exception
07068538 00000030 T __cxa_free_exception
07068568 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
070685a8 T __cxa_end_cleanup
070685b8 00000138 T __cxa_type_match
070686f0 000000b4 T __cxa_begin_cleanup
070687a4 000000b4 T __gnu_end_cleanup
07068858 000000cc T __cxa_begin_catch
07068924 000000e0 T __cxa_end_catch
07068a04 00000004 T std::exception::~exception()
07068a04 00000004 T std::exception::~exception()
07068a08 00000004 T std::bad_exception::~bad_exception()
07068a08 00000004 T std::bad_exception::~bad_exception()
07068a0c 0000000c T transaction clone for std::exception::what() const
07068a0c 0000000c T std::exception::what() const
07068a18 0000000c T transaction clone for std::bad_exception::what() const
07068a18 0000000c T std::bad_exception::what() const
07068a24 00000018 T std::bad_exception::~bad_exception()
07068a3c 0000000c T __cxa_get_globals_fast
07068a48 0000000c T __cxa_get_globals
07068a54 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
07068bbc 00000064 t base_of_encoded_value(unsigned char, _Unwind_Context*)
07068c20 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
07068cf8 000006f8 T __gxx_personality_v0
070693f0 00000038 T __cxxabiv1::__terminate(void (*)())
07069428 00000018 T std::terminate()
07069440 0000000c T __cxxabiv1::__unexpected(void (*)())
0706944c 00000018 T std::unexpected()
07069464 00000014 T std::get_terminate()
07069478 00000014 T std::get_unexpected()
0706948c 00000070 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
070694fc 00000070 T __cxa_init_primary_exception
0706956c 00000058 T __cxa_throw
070695c4 000000b0 T __cxa_rethrow
07069674 00000004 T floorl
07069678 00000008 T std::logic_error::what() const
07069678 00000008 T std::runtime_error::what() const
07069680 00000064 T std::logic_error::~logic_error()
07069680 00000064 T std::logic_error::~logic_error()
070696e4 00000064 T std::length_error::~length_error()
070696e4 00000064 T std::length_error::~length_error()
07069748 00000064 T std::invalid_argument::~invalid_argument()
07069748 00000064 T std::invalid_argument::~invalid_argument()
070697ac 00000064 T std::out_of_range::~out_of_range()
070697ac 00000064 T std::out_of_range::~out_of_range()
07069810 0000006c T std::logic_error::~logic_error()
0706987c 0000006c T std::invalid_argument::~invalid_argument()
070698e8 0000006c T std::out_of_range::~out_of_range()
07069954 0000006c T std::length_error::~length_error()
070699c0 00000038 T std::logic_error::logic_error(char const*)
070699c0 00000038 T std::logic_error::logic_error(char const*)
070699f8 00000044 T std::invalid_argument::invalid_argument(char const*)
070699f8 00000044 T std::invalid_argument::invalid_argument(char const*)
07069a3c 00000044 T std::length_error::length_error(char const*)
07069a3c 00000044 T std::length_error::length_error(char const*)
07069a80 00000044 T std::out_of_range::out_of_range(char const*)
07069a80 00000044 T std::out_of_range::out_of_range(char const*)
07069ac4 00000088 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
07069b4c 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
07069b50 000000a4 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
07069bf4 0000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
07069bf4 0000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
07069c40 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
07069cb0 0000002c T __cxa_call_terminate
07069cdc 00000154 T __cxa_call_unexpected
07069e30 0000028c T log2
0706a0bc 00000024 t with_errno
0706a0e0 00000050 T __math_divzero
0706a130 0000001c T __math_invalid
0706a150 0000015c T ceil
0706a2ac 000000b4 T ceilf
0706a360 00000164 T floor
0706a4c8 000000a8 T frexp
0706a570 00000070 T roundf
0706a5e0 00000010 T nan
0706a5f0 00000044 T __popcountsi2
0706a634 00000030 T __aeabi_f2lz
0706a634 00000030 T __fixsfdi
0706a668 00000040 T __aeabi_f2ulz
0706a668 00000040 T __fixunssfdi
0706a6a8 00000120 T __udivmoddi4
0706a7c8 00000018 t selfrel_offset31
0706a7e0 00000090 t search_EIT_table
0706a870 00000040 t __gnu_unwind_get_pr_addr
0706a8b0 00000118 t get_eit_entry
0706a9c8 00000088 t restore_non_core_regs
0706aa50 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
0706aa64 00000004 t _Unwind_DebugHook
0706aa68 00000064 t unwind_phase2
0706aacc 00000134 t unwind_phase2_forced
0706ac00 000000a4 T __gnu_Unwind_RaiseException
0706aca4 00000028 T __gnu_Unwind_ForcedUnwind
0706accc 00000074 T __gnu_Unwind_Resume
0706ad40 00000020 T __gnu_Unwind_Resume_or_Rethrow
0706ad60 00000004 T _Unwind_Complete
0706ad64 00000018 T _Unwind_DeleteException
0706ad7c 0000005c T _Unwind_VRS_Get
0706add8 0000002c t _Unwind_GetGR
0706ae04 0000005c T _Unwind_VRS_Set
0706ae60 0000002c t _Unwind_SetGR
0706ae8c 000000c0 T __gnu_Unwind_Backtrace
0706af4c 00000420 t __gnu_unwind_pr_common
0706b36c 00000008 T __aeabi_unwind_cpp_pr0
0706b374 00000008 W __aeabi_unwind_cpp_pr1
0706b37c 00000008 W __aeabi_unwind_cpp_pr2
0706b384 000003d8 T _Unwind_VRS_Pop
0706b75c 00000064 t next_unwind_byte
0706b7c0 0000002c t _Unwind_GetGR.constprop.0
0706b7ec 00000004 t unwind_UCB_from_context
0706b7f0 00000424 T __gnu_unwind_execute
0706bc14 00000048 T __gnu_unwind_frame
0706bc5c 00000010 T _Unwind_GetRegionStart
0706bc6c 0000001c T _Unwind_GetLanguageSpecificData
0706bc88 00000008 T _Unwind_GetDataRelBase
0706bc90 00000008 T _Unwind_GetTextRelBase
0706bc98 00000014 T atexit
0706bcac 00000028 T calloc
0706bcd4 00000094 T _calloc_r
0706bd68 00000010 T ctime
0706bd78 0000000c T __errno
0706bd84 0000007c T __libc_init_array
0706be00 00000018 T isspace
0706be18 00000018 T isxdigit
0706be30 00000020 T localtime
0706be50 00000388 T localtime_r
0706c1d8 00000028 T memalign
0706c200 00000148 T _memalign_r
0706c348 00000020 T malloc
0706c368 00000020 T free
0706c388 000007f0 T _malloc_r
0706cb78 000000e0 T memchr
0706cc58 000000a8 T memcmp
0706cd00 0000011c T memcpy
0706ce1c 00000154 T memmove
0706cf70 00000118 T memset
0706d088 0000000c T __malloc_lock
0706d094 0000000c T __malloc_unlock
0706d0a0 00000028 T realloc
0706d0c8 00000598 T _realloc_r
0706d660 000000cc T snprintf
0706d72c 00000064 T sprintf
0706d790 00000230 t iso_year_adjust
0706d9c0 0000109c t __strftime.isra.0
0706ea5c 00000004 T strftime
0706ea60 0000005c T strlen
0706eabc 000000dc T strncmp
0706eb98 000000c0 T strncpy
0706ec58 00000048 T strnlen
0706eca0 0000130c T _strtod_l
0706ffb0 000000c4 T strtof
07070074 000001c8 t _strtoul_l.constprop.0
0707023c 00000004 T _strtoul_r
07070240 00000030 T strtoul
07070270 0000064c t get_arg
070708c0 00003808 T _svfprintf_r
070740c8 0000003c T time
07074104 00000240 T __tzcalc_limits
07074344 0000000c T __tz_lock
07074350 0000000c T __tz_unlock
0707435c 00000010 T _tzset_unlocked
0707436c 00000474 T _tzset_unlocked_r
070747e0 000000a4 T _vsnprintf_r
07074884 00000038 T vsnprintf
070748bc 00000054 T _wcrtomb_r
07074910 00000028 T _wcsrtombs_r
07074938 0000000c T abs
07074944 00000020 T asctime
07074964 00000080 T asctime_r
070749e4 000000b0 T __register_exitproc
07074a94 000001a8 t quorem
07074c40 000012ec T _dtoa_r
07075f2c 000000f8 T _malloc_trim_r
07076024 000002e4 T _free_r
07076308 000000ec t rshift
070763f4 00000928 T __gethex
07076d1c 0000004c T __match
07076d68 0000029c T __hexnan
07077004 000000c8 T _findenv_r
070770cc 00000018 T _getenv_r
070770e4 0000000c T __gettzinfo
070770f0 00000274 T gmtime_r
07077364 0000000c T labs
07077370 0000000c T _localeconv_r
0707737c 00000010 T __locale_mb_cur_max
0707738c 000002fc T __utf8_mbtowc
07077688 00000088 T _Balloc
07077710 0000001c T _Bfree
0707772c 000000f4 T __multadd
07077820 00000110 T __s2b
07077930 00000058 T __hi0bits
07077988 0000009c T __lo0bits
07077a24 000000a4 T __i2b
07077ac8 00000204 T __multiply
07077ccc 00000120 T __pow5mult
07077dec 0000013c T __lshift
07077f28 00000058 T __mcmp
07077f80 000001cc T __mdiff
0707814c 00000088 T __ulp
070781d4 000000d4 T __b2d
070782a8 0000012c T __d2b
070783d4 00000078 T __ratio
0707844c 00000088 T __copybits
070784d4 0000005c T __any_on
07078530 0000000c T nanf
0707853c 00000064 T siprintf
070785a0 00000074 T siscanf
07078614 000000cc T sniprintf
070786e0 00000044 T __sread
07078724 00000008 T __seofread
0707872c 00000068 T __swrite
07078794 00000048 T __sseek
070787dc 00000008 T __sclose
070787e4 000000f0 T strcpy
070788d4 000001b0 t _strtol_l.part.0
07078a84 0000003c T _strtol_r
07078ac0 0000064c t get_arg
0707910c 00000188 T __ssprint_r
07079294 000024b4 T _svfiprintf_r
0707b748 00000050 t get_arg
0707b798 000000e0 T _sungetc_r
0707b878 0000006c T __ssrefill_r
0707b8e4 000000c8 T _sfread_r
0707b9ac 000022d0 T __ssvfiscanf_r
0707dc7c 000000a8 T __submore
0707dd24 00000190 T _wcsnrtombs_l
0707deb4 0000004c T _wcsnrtombs_r
0707df00 000000f0 T __utf8_wctomb
0707dff0 0000005c T __assert_func
0707e04c 0000000c T __env_lock
0707e058 0000000c T __env_unlock
0707e064 00000258 T __sflush_r
0707e2bc 00000094 T _fflush_r
0707e350 0000000c T _cleanup_r
0707e35c 00000184 T __sinit
0707e4e0 0000000c T __sfp_lock_acquire
0707e4ec 0000000c T __sfp_lock_release
0707e4f8 0000003c T fiprintf
0707e534 00000070 T _fwalk_reent
0707e5a4 00000008 T iswspace
0707e5ac 00000068 T _mbrtowc_r
0707e614 000000e4 T __sccl
0707e6f8 0000022c t _strtoll_l.constprop.0
0707e924 00000004 T _strtoll_r
0707e928 00000244 t _strtoull_l.constprop.0
0707eb6c 00000004 T _strtoull_r
0707eb70 0000064c t get_arg
0707f1bc 00000034 T __sprint_r
0707f1f0 00002584 T _vfiprintf_r
07081774 000000d4 t __sbprintf
07081848 00000154 T __swsetup_r
0708199c 00000160 T _fclose_r
07081afc 000004a4 T __sfvwrite_r
07081fa0 0000003c T iswspace_l
07081fdc 000001d4 t __jp2uc
070821b0 0000009c T _jp2uc_l
0708224c 00000138 T __smakebuf_r
07082384 00000084 T category
07082408 00000078 T _fstat_r
07082480 00000038 T _gettimeofday_r
070824b8 00000008 T _isatty_r
070824c0 00000084 T _lseek_r
07082544 00000080 T _read_r
070825c4 00000078 T _sbrk_r
0708263c 00000080 T _write_r
070826bc 00000008 T __flockfile
070826c4 00000008 T __funlockfile
070826cc 00000018 T __libc_lock_acquire
070826e4 00000018 T __libc_lock_release
070826fc 00000018 T __libc_lock_init_recursive
07082714 00000018 T __libc_lock_acquire_recursive
0708272c 00000018 T __libc_lock_release_recursive
07082744 00000018 T __libc_lock_close_recursive
0708275c 0000003c T __get_handle
07082798 000000f4 T _close_r
0708288c 00000028 T __getreent
070828b4 00000008 t null_write
070828bc 00000038 T __aeabi_d2lz
070828bc 00000038 T __fixdfdi
070828f8 00000040 T __aeabi_d2ulz
070828f8 00000040 T __fixunsdfdi
07082938 T _fini
07082c50 00000014 r CSWTCH.71
07082dc4 00000014 r CTRPluginFramework::defaultSoundFiles
07082e40 00000030 r CTRPluginFramework::g_byme
07082e70 00000048 r CTRPluginFramework::g_ctrpf
07082f50 00000014 V vtable for CTRPluginFramework::MenuItem
07082f64 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
07082f7c 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
07083188 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07083190 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07083324 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
07083344 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
07083364 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
07083384 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
070833d8 0000001c R vtable for CTRPluginFramework::TouchKey
070833f4 0000001c R vtable for CTRPluginFramework::TextBox
07083410 00000a00 r font
07083e88 00000058 r CTRPluginFramework::g_OSDPattern
07083ee8 0000001c R vtable for CTRPluginFramework::NumericTextBox
07083f04 0000001c R vtable for CTRPluginFramework::FloatingButton
07083f20 0000001c R vtable for CTRPluginFramework::ComboBox
07083f3c 0000001c R vtable for CTRPluginFramework::Button
07083f58 00000008 r CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07084658 00000040 r cond_names
07084698 00000010 r shift_names
070846a8 00000040 r RegNames
070846e8 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
070850c4 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
07085144 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
0708514c 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
07085158 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
0708516c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
07085174 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
07085358 00000008 R CTRPluginFramework::Time::Zero
07085360 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>
0708537c 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
0708538c 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
07085438 00000384 r UserManualFilled15_array
070857bc 00000384 r Unsplash15_array
07085b40 00000384 r UnCheckedCheckbox_array
07085ec4 000009c4 r TrashFilled25_array
07086888 000009c4 r Trash25_array
0708724c 00000384 r Star15_array
070875d0 00000384 r Shutdown15_array
07087954 00000384 r Settings15_array
07087cd8 00000384 r Search15_array
0708805c 000009c4 r Save25_array
07088a20 00001900 r Rocket40_array
0708a320 00000384 r Restart15_array
0708a6a4 00000384 r RAM15_array
0708aa28 000009c4 r PlusFilled25_array
0708b3ec 000009c4 r Plus25_array
0708bdb0 00000384 r More15_array
0708c134 00000384 r Maintenance15_array
0708c4b8 000009c4 r KeyboardFilled25_array
0708ce7c 000009c4 r Keyboard25_array
0708d840 000009c4 r InfoFilled25_array
0708e204 000009c4 r Info25_array
0708ebc8 00000384 r HandCursor15_array
0708ef4c 00000384 r Grid15_array
0708f2d0 000009c4 r GameControllerFilled25_array
0708fc94 000009c4 r GameController25_array
07090658 00000384 r GameController15_array
070909dc 00000384 r FolderFilled_array
07090d60 00000384 r File15_array
070910e4 00000384 r EnterKeyFilled15_array
07091468 00000384 r EnterKey15_array
070917ec 000009c4 r EditFilled25_array
070921b0 000009c4 r Edit25_array
07092b74 000009c4 r DuplicateFilled25_array
07093538 000009c4 r Duplicate25_array
07093efc 00000e10 r DefaultKeyboardCustomIcon_array
07094d0c 000009c4 r CutFilled25_array
070956d0 000009c4 r Cut25_array
07096094 00000384 r Controller15_array
07096418 00000640 r CloseWindowFilled20_array
07096a58 00000640 r CloseWindow20_array
07097098 000009c4 r ClipboardFilled25_array
07097a5c 000009c4 r Clipboard25_array
07098420 00000384 r ClearSymbolFilled15_array
070987a4 00000384 r ClearSymbol15_array
07098b28 00000384 r CheckedCheckbox_array
07098eac 00000384 r CapsLockOnFilled15_array
07099230 00000384 r CapsLockOn15_array
070995b4 000009c4 r AddFavoriteFilled25_array
07099f78 000009c4 r AddFavorite25_array
0709a93c 00000384 r About15_array
0709b39c 000000c9 V std::__detail::__to_chars_10_impl<unsigned long>(char*, unsigned int, unsigned long)::__digits
0709b468 000000c9 V std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)::__digits
0709b6b8 0000001c R vtable for CTRPluginFramework::MenuEntryTools
0709b6e4 00000038 r CTRPluginFramework::ktable
0709b71c 00000038 r CTRPluginFramework::stable
0709b908 00000038 R vtable for CTRPluginFramework::Search
0709b96c 00000038 R vtable for CTRPluginFramework::Search32
0709baf0 0000000c R typeinfo for __gnu_cxx::recursive_init_error
0709bafc 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0709bb20 00000014 R vtable for __gnu_cxx::recursive_init_error
0709bb34 00000001 R std::nothrow
0709bb38 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0709bb44 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0709bb6c 0000002c R vtable for __cxxabiv1::__si_class_type_info
0709bb98 00000008 R typeinfo for std::type_info
0709bba0 0000000d R typeinfo name for std::type_info
0709bbb0 00000404 R std::__detail::__prime_list
0709bfb4 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
0709bfc4 00000018 V typeinfo name for std::_Sp_make_shared_tag
0709bfdc 00000008 V typeinfo for std::_Sp_make_shared_tag
0709c0c0 0000000c R typeinfo for std::bad_alloc
0709c0cc 0000000d R typeinfo name for std::bad_alloc
0709c0dc 00000014 R vtable for std::bad_alloc
0709c0f0 0000000c R typeinfo for __cxxabiv1::__class_type_info
0709c0fc 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0709c120 0000002c R vtable for __cxxabiv1::__class_type_info
0709c170 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0709c178 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0709c180 0000000c R typeinfo for std::bad_exception
0709c18c 00000008 R typeinfo for std::exception
0709c194 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0709c1b4 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0709c1d8 00000012 R typeinfo name for std::bad_exception
0709c1ec 0000000d R typeinfo name for std::exception
0709c1fc 00000014 R vtable for std::bad_exception
0709c210 0000000c R typeinfo for std::logic_error
0709c21c 0000000c R typeinfo for std::length_error
0709c228 0000000c R typeinfo for std::out_of_range
0709c234 0000000c R typeinfo for std::invalid_argument
0709c240 00000010 R typeinfo name for std::logic_error
0709c250 00000011 R typeinfo name for std::length_error
0709c264 00000011 R typeinfo name for std::out_of_range
0709c278 00000015 R typeinfo name for std::invalid_argument
0709c290 00000014 R vtable for std::logic_error
0709c2a4 00000014 R vtable for std::length_error
0709c2b8 00000014 R vtable for std::out_of_range
0709c2cc 00000014 R vtable for std::invalid_argument
0709c328 00000890 R __log2_data
0709cbb8 00000004 R _global_impure_ptr
0709cbbc 00000060 R __month_lengths
0709cca4 00000014 r fpi.1
0709ccb8 00000014 r fpinan.0
0709ccd0 00000028 r tinytens
0709cd34 00000010 r blanks.1
0709cd44 00000010 r zeroes.0
0709ceac 000000fc R _C_time_locale
0709d01c 00000015 r day_name.1
0709d034 00000024 r mon_name.0
0709d058 00000101 R _ctype_
0709d208 00000100 R __hexdig
0709d308 0000000c R _C_numeric_locale
0709d398 00000028 R __mprec_bigtens
0709d3c0 000000c8 R __mprec_tens
0709d488 0000000c r p05.0
0709d494 0000006c R __action_table
0709d500 00000100 R __chclass
0709d600 0000006c R __state_table
0709d66c 00000010 r blanks.1
0709d67c 00000010 r zeroes.0
0709d68c 00000022 r basefix.0
0709d6f0 00000010 r blanks.1
0709d700 00000010 r zeroes.0
0709d724 000000bc r a1
0709d7e0 000000bc r a2
0709d89c 0000005b r a3
0709d8f8 00000070 r a6
0709d968 000000a2 r a7
0709da0c 00000040 r a8
0709da4c 0000172a r b02cf
0709f178 00001a7c r d02f4
070a0bf4 000031e6 r categories
070a3de4 00000070 R dotab_stdnull
070a3fb0 R __exidx_start
070a4230 R __exidx_end
070a4230 00000004 D cwavCurrentVAPAConvCallback
070a4234 00000001 D CTRPluginFramework::g_keepRunning
070a4235 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
070a4236 00000001 D CTRPluginFramework::SystemImpl::Language
070a4238 00000004 D CTRPluginFramework::Screenshot::Hotkeys
070a423c 00000004 D CTRPluginFramework::Screenshot::Screens
070a4240 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
070a4244 000001f4 D opcode_names
070a4438 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
070a443c 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
070a4440 00000004 D CTRPluginFramework::FwkSettings::Header
070a4444 00000004 D g_charPerSheet
070a4448 00000004 D UserManualFilled15
070a444c 00000004 D Unsplash15
070a4450 00000004 D UnCheckedCheckbox
070a4454 00000004 D TrashFilled25
070a4458 00000004 D Trash25
070a445c 00000004 D Star15
070a4460 00000004 D Shutdown15
070a4464 00000004 D Settings15
070a4468 00000004 D Search15
070a446c 00000004 D Save25
070a4470 00000004 D Rocket40
070a4474 00000004 D Restart15
070a4478 00000004 D RAM15
070a447c 00000004 D PlusFilled25
070a4480 00000004 D Plus25
070a4484 00000004 D More15
070a4488 00000004 D Maintenance15
070a448c 00000004 D KeyboardFilled25
070a4490 00000004 D Keyboard25
070a4494 00000004 D InfoFilled25
070a4498 00000004 D Info25
070a449c 00000004 D HandCursor15
070a44a0 00000004 D Grid15
070a44a4 00000004 D GameControllerFilled25
070a44a8 00000004 D GameController25
070a44ac 00000004 D GameController15
070a44b0 00000004 D FolderFilled
070a44b4 00000004 D File15
070a44b8 00000004 D EnterKeyFilled15
070a44bc 00000004 D EnterKey15
070a44c0 00000004 D EditFilled25
070a44c4 00000004 D Edit25
070a44c8 00000004 D DuplicateFilled25
070a44cc 00000004 D Duplicate25
070a44d0 00000004 D DefaultKeyboardCustomIcon
070a44d4 00000004 D CutFilled25
070a44d8 00000004 D Cut25
070a44dc 00000004 D Controller15
070a44e0 00000004 D CloseWindowFilled20
070a44e4 00000004 D CloseWindow20
070a44e8 00000004 D ClipboardFilled25
070a44ec 00000004 D Clipboard25
070a44f0 00000004 D ClearSymbolFilled15
070a44f4 00000004 D ClearSymbol15
070a44f8 00000004 D CheckedCheckbox
070a44fc 00000004 D CapsLockOnFilled15
070a4500 00000004 D CapsLockOn15
070a4504 00000004 D AddFavoriteFilled25
070a4508 00000004 D AddFavorite25
070a450c 00000004 D About15
070a4510 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
070a4514 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
070a4518 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
070a451c 00000004 d kCount
070a4520 00000004 d kDelay
070a4524 00000004 d kInterval
070a4528 00000004 D __cxxabiv1::__unexpected_handler
070a452c 00000004 D __cxxabiv1::__terminate_handler
070a4530 00000004 D _impure_ptr
070a4538 00000460 d impure_data
070a4998 00000408 D __malloc_av_
070a4da0 00000004 D __malloc_sbrk_base
070a4da4 00000004 D __malloc_trim_threshold
070a4da8 0000000c d __malloc_recursive_mutex
070a4db4 00000004 d __tz_mutex
070a4db8 00000008 D _tzname
070a4dc0 0000000c D __atexit_recursive_mutex
070a4dd0 00000058 d tzinfo
070a4e28 00000002 d numempty
070a4e2c 0000016c D __global_locale
070a4f98 00000004 D environ
070a4f9c 0000000c d __env_recursive_mutex
070a4fa8 0000000c d __sfp_recursive_mutex
070a4fb4 0000000c d __sinit_recursive_mutex
070a4fc0 00000004 d __hndl_lock
070a4fc4 0000000c d __stderr_handle
070a4fd0 0000000c d __stdin_handle
070a4fdc 0000000c d __stdout_handle
070a4fe8 00001000 d handles
070a5fe8 0000008c D devoptab_list
070a6088 d _GLOBAL_OFFSET_TABLE_
070a6094 D __tdata_lma
070a60a0 d __frame_dummy_init_array_entry
070a60a0 D __init_array_start
070a60a0 B __preinit_array_end
070a60a0 B __preinit_array_start
070a60a0 D __tdata_lma_end
070a610c d __do_global_dtors_aux_fini_array_entry
070a610c D __init_array_end
070a6160 D __bss_start__
070a6160 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070a616c 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
070a6170 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
070a6174 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070a6178 00000001 B CTRPluginFramework::cmp8
070a6179 00000001 B CTRPluginFramework::offset8
070a617a 00000001 B CTRPluginFramework::data8
070a617c 00000002 B CTRPluginFramework::cmp16
070a617e 00000002 B CTRPluginFramework::offset16
070a6180 00000002 B CTRPluginFramework::data16
070a6184 00000004 B CTRPluginFramework::cmp32
070a6188 00000004 B CTRPluginFramework::offset32
070a618c 00000004 B CTRPluginFramework::data32
070a6190 00000004 B CTRPluginFramework::data
070a6194 00000004 B CTRPluginFramework::offset
070a6198 00000004 B CTRPluginFramework::patch_address
070a619c b saved_stack
070a61a4 00000001 b hooked.1
070a61a8 0000000c b cookie.0
070a61b4 00000004 b cwavListCount
070a61b8 00000004 b cwavList
070a61bc 00000004 b cwavAddedToList
070a61c0 00000004 b g_currentEnv
070a61c4 00000004 b g_ndspWaveBuffers
070a61c8 b completed.1
070a61cc b object.0
070a61e4 00000004 b CTRPluginFramework::g_runningInstance
070a61e8 00000004 B CTRPluginFramework::Color::DodgerBlue
070a61ec 00000004 B CTRPluginFramework::Color::DeepSkyBlue
070a61f0 00000004 B CTRPluginFramework::Color::ForestGreen
070a61f4 00000004 B CTRPluginFramework::Color::Red
070a61f8 00000004 B CTRPluginFramework::Color::Blue
070a61fc 00000004 B CTRPluginFramework::Color::Cyan
070a6200 00000004 B CTRPluginFramework::Color::Gray
070a6204 00000004 B CTRPluginFramework::Color::Lime
070a6208 00000004 B CTRPluginFramework::Color::Navy
070a620c 00000004 B CTRPluginFramework::Color::Teal
070a6210 00000004 B CTRPluginFramework::Color::Black
070a6214 00000004 B CTRPluginFramework::Color::Brown
070a6218 00000004 B CTRPluginFramework::Color::Green
070a621c 00000004 B CTRPluginFramework::Color::Olive
070a6220 00000004 B CTRPluginFramework::Color::White
070a6224 00000004 B CTRPluginFramework::Color::Maroon
070a6228 00000004 B CTRPluginFramework::Color::Orange
070a622c 00000004 B CTRPluginFramework::Color::Purple
070a6230 00000004 B CTRPluginFramework::Color::Silver
070a6234 00000004 B CTRPluginFramework::Color::Yellow
070a6238 00000004 B CTRPluginFramework::Color::DimGrey
070a623c 00000004 B CTRPluginFramework::Color::Magenta
070a6240 00000004 B CTRPluginFramework::Color::SkyBlue
070a6244 00000004 B CTRPluginFramework::Color::DarkGrey
070a6248 00000004 B CTRPluginFramework::Color::BlackGrey
070a624c 00000004 B CTRPluginFramework::Color::Gainsboro
070a6250 00000004 B CTRPluginFramework::Color::LimeGreen
070a6254 00000004 B CTRPluginFramework::Color::Turquoise
070a6258 00000004 b g_onLoadCroHook
070a625c 00000004 b g_onLoadCroLock
070a6260 00000004 B CTRPluginFramework::g_keepEvent
070a6268 00000008 B CTRPluginFramework::_sdmcArchive
070a6270 00000004 B CTRPluginFramework::g_keepThreadHandle
070a6274 00000004 B CTRPluginFramework::g_continueGameEvent
070a6278 00000008 b CTRPluginFramework::g_mainThread
070a6280 00001000 b CTRPluginFramework::keepThreadStack
070a7280 00000004 b g_mainThreadVars
070a7284 00000004 b plgEvent
070a7288 00000004 b plgLdrArbiter
070a728c 00000004 b plgLdrHandle
070a7290 00000004 b plgLdrRefCount
070a7294 00000004 b plgReply
070a7298 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
070a729c 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
070a72a0 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
070a72a8 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
070a72b0 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
070a72b4 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
070a72b8 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
070a72c0 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
070a72c8 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
070a72cc 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
070a72d0 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
070a72d4 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
070a72dc 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
070a72e0 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
070a72e4 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
070a72e8 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
070a72ec 00000004 B CTRPluginFramework::SystemImpl::AptStatus
070a72f0 00000008 b CTRPluginFramework::g_sleepEvent
070a72f8 00000004 B CTRPluginFramework::Screenshot::_filecount
070a72fc 00000008 B CTRPluginFramework::Screenshot::_readyEvent
070a7304 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
070a730c 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
070a7310 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
070a7328 00000008 B CTRPluginFramework::Screenshot::Timer
070a7330 00000004 B CTRPluginFramework::Screenshot::_mode
070a7334 00000008 B CTRPluginFramework::Screenshot::_task
070a733c 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
070a7358 00000008 B CTRPluginFramework::Screenshot::_timer
070a7360 00000004 B CTRPluginFramework::Screenshot::_display
070a7364 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
070a7368 00000001 B CTRPluginFramework::Screenshot::IsEnabled
070a736c 00000004 b CTRPluginFramework::isReady
070a7370 00000004 B CTRPluginFramework::ScreenImpl::Top
070a7374 00000004 B CTRPluginFramework::ScreenImpl::Bottom
070a7378 000000ac b CTRPluginFramework::_botBuf
070a7424 000000ac b CTRPluginFramework::_topBuf
070a74d0 000000a8 B CTRPluginFramework::Scheduler::_singleton
070a7578 00000004 B CTRPluginFramework::ProcessImpl::MainThread
070a757c 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
070a7588 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
070a758c 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
070a7598 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
070a75a8 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
070a75ac 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
070a75b0 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
070a75b4 00000004 B CTRPluginFramework::ProcessImpl::Status
070a75b8 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
070a7620 00000008 B CTRPluginFramework::ProcessImpl::TitleId
070a7628 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
070a762c 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
070a7630 0000001c B CTRPluginFramework::HookManager::_singleton
070a764c 0000000c b sAddrMap
070a7658 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
070a765c 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
070a7660 00000008 b CTRPluginFramework::Heap::g_heapPool
070a7668 0000000c b CTRPluginFramework::Heap::_mutex
070a7674 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
070a7680 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
070a7684 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
070a7690 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
070a7694 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
070a7698 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
070a769c 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070a76a0 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
070a76a4 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
070a76a8 00000004 b CTRPluginFramework::g_bymeString
070a76ac 00000004 b CTRPluginFramework::g_ctrpfString
070a76b0 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
070a76b8 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070a76c0 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
070a76c8 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
070a76d0 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
070a76d4 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
070a76dc 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
070a76e0 00000004 b CTRPluginFramework::g_radioId
070a76e4 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
070a76e8 00000004 b CTRPluginFramework::__pmARinstance
070a76ec 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
070a76f4 00000004 B CTRPluginFramework::MenuItem::_uidCounter
070a76f8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070a76fc 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
070a7700 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
070a7704 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070a7708 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
070a770c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
070a7710 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070a7714 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070a7718 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
070a7724 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
070a7730 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
070a7740 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070a7748 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
070a774c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
070a775c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
070a7770 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070a7778 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
070a7788 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
070a7798 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070a77a8 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070a77b8 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
070a77bc 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
070a77c0 00000004 B CTRPluginFramework::__g_hexEditor
070a77c4 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
070a77d4 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
070a77d8 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
070a77dc 00000010 b CTRPluginFramework::GuideReader::Draw()::background
070a77ec 00000004 b CTRPluginFramework::__converter
070a77f0 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
070a7800 00000028 B CTRPluginFramework::Window::BottomWindow
070a7828 00000028 B CTRPluginFramework::Window::TopWindow
070a7850 00000004 B CTRPluginFramework::RendererPriv::g_customColor
070a7854 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
070a7858 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
070a7864 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
070a7868 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
070a786c 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
070a7870 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
070a787c 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
070a7884 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
070a7888 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
070a78ac 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
070a78c4 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
070a78c8 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
070a78cc 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
070a78d0 0000000c B CTRPluginFramework::OSDImpl::Notifications
070a78dc 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
070a78e4 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
070a78ec 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
070a78f4 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
070a78fc 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
070a7904 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
070a7908 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
070a7914 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
070a7918 00000004 B CTRPluginFramework::OSDImpl::OSDHook
070a791c 0000000c B CTRPluginFramework::OSDImpl::RecLock
070a7928 0000000c B CTRPluginFramework::OSDImpl::Callbacks
070a7934 00000018 B CTRPluginFramework::OSDImpl::TopScreen
070a7950 00000060 b CTRPluginFramework::g_fpsCounter
070a79b0 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
070a79b4 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
070a79d0 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
070a79d4 00000004 B CTRPluginFramework::g_fontAllocated
070a79d8 00000004 B CTRPluginFramework::g_glyphAllocated
070a79dc 0000000c B CTRPluginFramework::Font::_mutex
070a79e8 00000004 B CTRPluginFramework::ARHandler::ActiveData
070a79ec 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
070a79f0 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
070a79f4 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
070a79f8 00000010 B CTRPluginFramework::ARHandler::Data
070a7a08 00000008 B CTRPluginFramework::ARHandler::Offset
070a7a10 00000008 B CTRPluginFramework::ARHandler::Storage
070a7a18 00000001 b CTRPluginFramework::ToggleFloat
070a7a20 00000fa0 b CTRPluginFramework::arStack
070a89c0 00000004 b CTRPluginFramework::g_context
070a89c4 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
070a89c8 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
070a89d4 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070a89d8 00000004 b CTRPluginFramework::__arCodeEditor
070a89dc 00000001 b CTRPluginFramework::g_condAgainstData
070a89dd 00000001 b CTRPluginFramework::g_newCondDataToggle
070a89e0 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070a89ec 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
070a89f0 0000000c B CTRPluginFramework::g_codeTypes
070a89fc 00000008 B CTRPluginFramework::Preferences::Backlights
070a8a04 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
070a8a1c 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
070a8a34 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
070a8a4c 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
070a8a50 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
070a8a54 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
070a8a58 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
070a8a60 00000008 B CTRPluginFramework::Preferences::Flags
070a8a68 000000a8 B CTRPluginFramework::Preferences::Settings
070a8b10 000009c4 b CTRPluginFramework::g_rng
070a94d4 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070a94d8 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070a94f0 0000000c b __mutex
070a94fc 00000018 b __threads
070a9514 00000004 B CTRPluginFramework::System::OnAbort
070a9518 00000004 B CTRPluginFramework::Process::OnPauseResume
070a951c 00000004 B CTRPluginFramework::Process::exceptionCallback
070a9520 00000004 B CTRPluginFramework::Controller::_keysReleased
070a9524 00000004 B CTRPluginFramework::Controller::_keysDown
070a9528 00000004 B CTRPluginFramework::Controller::_keysHeld
070a952c 0000001c b CTRPluginFramework::g_dummy
070a9548 00000180 b CTRPluginFramework::g_keyName
070a96c8 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070a96ca 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070a96cc 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070a96d0 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070a96d4 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
070a96ec 0000000c B CTRPluginFramework::FSPath::FSMutex
070a96f8 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
070a96fc 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
070a9700 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
070a9704 00000010 b CTRPluginFramework::SubMenu::Draw()::background
070a9714 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
070a9718 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
070a971c 00000004 b CTRPluginFramework::g_HookMode
070a9720 00000004 b CTRPluginFramework::g_OpenFileLock
070a9728 00000040 b CTRPluginFramework::g_hookExportFile
070a9768 00000004 b CTRPluginFramework::g_screenshotEntry
070a976c 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
070a9770 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
070a9774 00000004 b CTRPluginFramework::g_mode
070a9778 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
070a9780 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
070a9784 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
070a9788 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
070a978c 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
070a979c 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
070a97ac 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
070a97b0 00000001 b CTRPluginFramework::g_progressLoop
070a97b8 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
070a97c8 00000004 B CTRPluginFramework::_pool
070a97cc 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
070a97d0 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
070a97d8 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
070a97e0 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
070a97e8 00000004 b arbiter
070a97ec 00000004 B g_sharedFont
070a97f0 00000004 b sharedFontAddr
070a97f4 00000004 b srvHandle
070a97f8 00000004 b srvRefCount
070a97fc 00000004 b currentAddr
070a9800 00000004 b maxAddr
070a9804 00000004 b minAddr
070a9808 00000c60 b ndspChn
070aa468 00000004 b cfguHandle
070aa46c 00000004 b cfguRefCount
070aa470 00000004 b gspEvent
070aa474 00000004 b gspEventThread
070aa478 00000004 b gspGpuHandle
070aa47c 00000001 b gspGpuRight
070aa480 00000004 b gspRefCount
070aa484 00000001 b gspRunEvents
070aa488 00000004 b gspSharedMem
070aa48c 00000004 b gspSharedMemHandle
070aa490 00000004 b acHandle
070aa494 00000004 b acRefCount
070aa498 00000004 b amHandle
070aa49c 00000004 b amRefCount
070aa4a0 00000004 B csndChannels
070aa4a4 00000004 b csndCmdCurOff
070aa4a8 00000004 b csndCmdStartOff
070aa4ac 00000004 b csndHandle
070aa4b0 00000004 b csndMutex
070aa4b4 00000010 B csndOffsets
070aa4c4 00000004 b csndRefCount
070aa4c8 00000004 B csndSharedMem
070aa4cc 00000004 b csndSharedMemBlock
070aa4d0 00000004 B csndSharedMemSize
070aa4d4 00000004 b aptLockHandle
070aa4d8 00000001 b flagInit.1
070aa4d9 00000001 b flagValue.0
070aa4dc 00000004 b serviceName.6
070aa4e0 00000006 b aVec
070aa4e8 00000004 b cPos
070aa4ec 00000006 b gRate
070aa4f4 00000014 B hidEvents
070aa508 00000004 B hidHandle
070aa50c 00000004 B hidMemHandle
070aa510 00000004 b hidRefCount
070aa514 00000004 B hidSharedMem
070aa518 00000004 b kDown
070aa51c 00000004 b kHeld
070aa520 00000004 b kOld
070aa524 00000004 b kRepeat
070aa528 00000004 b kUp
070aa52c 00000004 b tPos
070aa530 00000001 b usingIrrst
070aa534 00000004 b srvPmHandle
070aa538 00000080 b fsExemptArchives
070aa5b8 00000004 b fsuHandle
070aa5bc 00000004 b fsuRefCount
070aa5c0 00000004 B __ctru_heap
070aa5c4 00000004 V __ctru_heap_size
070aa5c8 00000004 B __ctru_linear_heap
070aa5cc 00000004 b csPos
070aa5d0 00000004 B irrstEvent
070aa5d4 00000004 B irrstHandle
070aa5d8 00000004 B irrstMemHandle
070aa5dc 00000004 b irrstRefCount
070aa5e0 00000004 B irrstSharedMem
070aa5e4 00000004 b kHeld
070aa5e8 00000004 b (anonymous namespace)::__new_handler
070aa5ec 00000010 b (anonymous namespace)::emergency_pool
070aa5fc 0000000c b eh_globals
070aa608 00000010 V std::string::_Rep::_S_empty_rep_storage
070aa618 00000028 B __malloc_current_mallinfo
070aa640 00000004 B __malloc_max_sbrked_mem
070aa644 00000004 B __malloc_max_total_mem
070aa648 00000004 B __malloc_top_pad
070aa64c 0000000b b __tzname_dst
070aa658 0000000b b __tzname_std
070aa664 00000004 b prev_tzenv
070aa668 00000004 B _daylight
070aa66c 00000004 B _timezone
070aa670 00000004 b initial_env
070aa674 00000004 b heap_start.0
070aa678 00000004 B fake_heap_end
070aa67c 00000004 B fake_heap_start
070aa680 00000048 B __syscalls
070aa6c8 B __tls_start
070aa6f0 B __bss_end__
070aa6f0 A __end__
070aa6f0 B __tls_end
